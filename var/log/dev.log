[2022-05-13T19:57:30.863469+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T19:57:30.903101+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-13T19:57:30.972203+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-13T19:57:30.984551+02:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-13T19:57:51.979409+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T19:57:51.982942+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-13T19:57:51.986173+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-13T19:57:51.994839+02:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-13T19:57:58.209356+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T19:57:58.211673+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-13T19:57:58.215387+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-13T19:57:58.224561+02:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-13T19:59:49.842526+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c6085"},"request_uri":"http://localhost/project-1/public/_wdt/7c6085","method":"GET"} []
[2022-05-13T19:59:49.851915+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T19:59:51.626311+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T19:59:51.628298+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-13T19:59:51.686432+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-13T19:59:51.726645+02:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-13T19:59:51.870674+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"59635a"},"request_uri":"http://localhost/project-1/public/_wdt/59635a","method":"GET"} []
[2022-05-13T19:59:51.871665+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T20:07:19.476436+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T20:07:19.479520+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-13T20:07:19.483629+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-13T20:07:19.492507+02:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] FATAL:  password authentication failed for user \"symfony\"\nFATAL:  password authentication failed for user \"symfony\" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-13T20:07:19.607263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc79ae"},"request_uri":"http://localhost/project-1/public/_wdt/bc79ae","method":"GET"} []
[2022-05-13T20:07:19.609704+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-13T20:12:11.655073+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.command.user_password_encoder" service is deprecated, use "security.command.user_password_hash" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.command.user_password_encoder\" service is deprecated, use \"security.command.user_password_hash\" instead. at /var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/getSecurity_Command_UserPasswordEncoderService.php:22)"} []
[2022-05-13T20:12:11.657333+02:00] deprecation.INFO: User Deprecated: Since symfony/security-bundle 5.3: The "security.encoder_factory.generic" service is deprecated, use "security.password_hasher_factory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-bundle 5.3: The \"security.encoder_factory.generic\" service is deprecated, use \"security.password_hasher_factory\" instead. at /var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/getSecurity_EncoderFactory_GenericService.php:22)"} []
[2022-05-13T20:12:11.657929+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactory" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactory" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactory\" instead. at /var/www/html/project-1/vendor/symfony/security-core/Encoder/EncoderFactory.php:20)"} []
[2022-05-13T20:12:11.658158+02:00] deprecation.INFO: User Deprecated: Since symfony/security-core 5.3: The "Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" class is deprecated, use "Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface" instead. {"exception":"[object] (ErrorException(code: 0): User Deprecated: Since symfony/security-core 5.3: The \"Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface\" class is deprecated, use \"Symfony\\Component\\PasswordHasher\\Hasher\\PasswordHasherFactoryInterface\" instead. at /var/www/html/project-1/vendor/symfony/security-core/Encoder/EncoderFactoryInterface.php:17)"} []
[2022-05-14T10:07:30.371407+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:07:30.404811+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:07:30.466307+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:07:30.475140+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:07:30.480874+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:07:30.592466+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:07:30.601966+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e40609"},"request_uri":"http://localhost/project-1/public/_wdt/e40609","method":"GET"} []
[2022-05-14T10:07:30.606052+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:08:30.530592+02:00] console.CRITICAL: Error thrown while running command "'make:collectioner'". Message: "Command "make:collectioner" is not defined.  Did you mean one of these?     make:auth     make:command     make:controller     make:crud     make:docker:database     make:entity     make:fixtures     make:form     make:functional-test     make:message     make:messenger-middleware     make:migration     make:registration-form     make:reset-password     make:serializer:encoder     make:serializer:normalizer     make:stimulus-controller     make:subscriber     make:test     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:collectioner\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:stimulus-controller\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /var/www/html/project-1/vendor/symfony/console/Application.php:709)","command":"'make:collectioner'","message":"Command \"make:collectioner\" is not defined.\n\nDid you mean one of these?\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:docker:database\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:message\n    make:messenger-middleware\n    make:migration\n    make:registration-form\n    make:reset-password\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:stimulus-controller\n    make:subscriber\n    make:test\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2022-05-14T10:10:28.616838+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:28.620499+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:10:28.623634+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:10:28.629702+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:10:28.634937+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:10:28.748780+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:10:28.772427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dedec5"},"request_uri":"http://localhost/project-1/public/_wdt/dedec5","method":"GET"} []
[2022-05-14T10:10:28.774189+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:32.043566+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:32.045946+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:10:32.048837+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:10:32.053730+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:10:32.056975+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:10:32.109363+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc41da"},"request_uri":"http://localhost/project-1/public/_wdt/cc41da","method":"GET"} []
[2022-05-14T10:10:32.110636+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:32.124847+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:10:32.253041+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cc41da"},"request_uri":"http://localhost/project-1/public/_wdt/cc41da","method":"GET"} []
[2022-05-14T10:10:32.254448+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:38.452349+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:38.455284+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:10:38.458343+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:10:38.463639+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:10:38.466950+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:10:38.523246+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afe905"},"request_uri":"http://localhost/project-1/public/_wdt/afe905","method":"GET"} []
[2022-05-14T10:10:38.524809+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:10:38.537595+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:10:38.666341+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afe905"},"request_uri":"http://localhost/project-1/public/_wdt/afe905","method":"GET"} []
[2022-05-14T10:10:38.667217+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:12.689586+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:12.693257+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:11:12.697731+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:11:12.705482+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:11:12.709702+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:11:12.793759+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d2fd0"},"request_uri":"http://localhost/project-1/public/_wdt/7d2fd0","method":"GET"} []
[2022-05-14T10:11:12.795928+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:12.805517+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:11:12.996238+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d2fd0"},"request_uri":"http://localhost/project-1/public/_wdt/7d2fd0","method":"GET"} []
[2022-05-14T10:11:12.997291+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:13.978717+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:13.982545+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:11:13.986464+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:11:13.992986+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:11:13.996800+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:11:14.053639+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"145937"},"request_uri":"http://localhost/project-1/public/_wdt/145937","method":"GET"} []
[2022-05-14T10:11:14.054629+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:11:14.074064+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:11:14.194614+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"145937"},"request_uri":"http://localhost/project-1/public/_wdt/145937","method":"GET"} []
[2022-05-14T10:11:14.195612+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:11.360225+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:11.363973+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:11.368032+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:11.374321+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:11.377763+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:11.459411+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:11.479958+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"da7c88"},"request_uri":"http://localhost/project-1/public/_wdt/da7c88","method":"GET"} []
[2022-05-14T10:12:11.481553+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.160193+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.162418+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:12.165000+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:12.172720+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:12.176908+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:12.238342+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64f08a"},"request_uri":"http://localhost/project-1/public/_wdt/64f08a","method":"GET"} []
[2022-05-14T10:12:12.240014+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.253955+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:12.381687+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64f08a"},"request_uri":"http://localhost/project-1/public/_wdt/64f08a","method":"GET"} []
[2022-05-14T10:12:12.382751+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.438682+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.440590+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:12.442588+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:12.447551+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:12.450786+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:12.499469+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8dde53"},"request_uri":"http://localhost/project-1/public/_wdt/8dde53","method":"GET"} []
[2022-05-14T10:12:12.501067+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.521716+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:12.639043+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8dde53"},"request_uri":"http://localhost/project-1/public/_wdt/8dde53","method":"GET"} []
[2022-05-14T10:12:12.639919+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.727149+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.728988+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:12.732344+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:12.737192+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:12.740349+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:12.784902+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ea6ea"},"request_uri":"http://localhost/project-1/public/_wdt/8ea6ea","method":"GET"} []
[2022-05-14T10:12:12.785800+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:12.810641+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:12.924250+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ea6ea"},"request_uri":"http://localhost/project-1/public/_wdt/8ea6ea","method":"GET"} []
[2022-05-14T10:12:12.925492+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:15.335172+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"8ea6ea"},"request_uri":"http://localhost/project-1/public/_profiler/8ea6ea?panel=request","method":"GET"} []
[2022-05-14T10:12:15.336390+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:20.183226+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"8ea6ea"},"request_uri":"http://localhost/project-1/public/_profiler/8ea6ea?panel=router","method":"GET"} []
[2022-05-14T10:12:20.184246+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:41.798178+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:41.801725+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:41.805725+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:41.812429+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:41.817070+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:41.901305+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f790ce"},"request_uri":"http://localhost/project-1/public/_wdt/f790ce","method":"GET"} []
[2022-05-14T10:12:41.903206+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:41.909785+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:46.229132+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:46.233184+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:46.237777+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:46.244211+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:46.248437+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:46.312447+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09a3ea"},"request_uri":"http://localhost/project-1/public/_wdt/09a3ea","method":"GET"} []
[2022-05-14T10:12:46.313828+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:46.358855+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:46.456205+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09a3ea"},"request_uri":"http://localhost/project-1/public/_wdt/09a3ea","method":"GET"} []
[2022-05-14T10:12:46.457831+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:53.969043+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:53.972820+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:53.977035+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:53.982048+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:53.987431+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:54.062119+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:54.092583+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"030549"},"request_uri":"http://localhost/project-1/public/_wdt/030549","method":"GET"} []
[2022-05-14T10:12:54.094242+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.104999+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.107442+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:56.110257+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:56.115080+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:56.118168+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:56.166190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98ddc2"},"request_uri":"http://localhost/project-1/public/_wdt/98ddc2","method":"GET"} []
[2022-05-14T10:12:56.168178+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.189918+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:56.306125+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98ddc2"},"request_uri":"http://localhost/project-1/public/_wdt/98ddc2","method":"GET"} []
[2022-05-14T10:12:56.307124+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.829650+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.833110+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:56.836687+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:56.841967+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:56.845644+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:56.903302+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4767fc"},"request_uri":"http://localhost/project-1/public/_wdt/4767fc","method":"GET"} []
[2022-05-14T10:12:56.905920+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:56.951995+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:57.050873+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4767fc"},"request_uri":"http://localhost/project-1/public/_wdt/4767fc","method":"GET"} []
[2022-05-14T10:12:57.052261+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.212000+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.214953+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:57.219450+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:57.224405+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:57.227544+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:57.273600+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f7e32"},"request_uri":"http://localhost/project-1/public/_wdt/3f7e32","method":"GET"} []
[2022-05-14T10:12:57.274487+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.296644+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:57.411222+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f7e32"},"request_uri":"http://localhost/project-1/public/_wdt/3f7e32","method":"GET"} []
[2022-05-14T10:12:57.412107+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.436458+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.439895+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:57.443214+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:57.448400+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:57.451607+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:57.501008+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5afe55"},"request_uri":"http://localhost/project-1/public/_wdt/5afe55","method":"GET"} []
[2022-05-14T10:12:57.502504+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.524667+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:57.637505+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.639648+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:57.641845+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:57.643791+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5afe55"},"request_uri":"http://localhost/project-1/public/_wdt/5afe55","method":"GET"} []
[2022-05-14T10:12:57.645166+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.647288+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:57.650692+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:57.710258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c428a"},"request_uri":"http://localhost/project-1/public/_wdt/5c428a","method":"GET"} []
[2022-05-14T10:12:57.711235+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.730039+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:57.808049+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.813508+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:57.838320+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:57.843428+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:57.847717+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:57.852263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c428a"},"request_uri":"http://localhost/project-1/public/_wdt/5c428a","method":"GET"} []
[2022-05-14T10:12:57.853327+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.907133+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf7a43"},"request_uri":"http://localhost/project-1/public/_wdt/cf7a43","method":"GET"} []
[2022-05-14T10:12:57.908325+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.957153+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:12:57.959124+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:12:57.960424+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:57.961914+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:12:57.970443+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:12:57.975849+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:12:58.046777+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:12:58.052894+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88941f"},"request_uri":"http://localhost/project-1/public/_wdt/88941f","method":"GET"} []
[2022-05-14T10:12:58.054530+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:13:52.003194+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:13:52.006193+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:13:52.009029+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:13:52.014111+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:13:52.017586+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:13:52.100198+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:13:52.146330+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64c2f4"},"request_uri":"http://localhost/project-1/public/_wdt/64c2f4","method":"GET"} []
[2022-05-14T10:13:52.147408+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:13:52.762356+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:13:52.766289+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:13:52.770052+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:13:52.779076+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:13:52.785336+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:13:52.874939+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"259add"},"request_uri":"http://localhost/project-1/public/_wdt/259add","method":"GET"} []
[2022-05-14T10:13:52.876388+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:13:52.885092+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:13:53.026379+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"259add"},"request_uri":"http://localhost/project-1/public/_wdt/259add","method":"GET"} []
[2022-05-14T10:13:53.028544+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:00.603054+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:00.608893+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:14:00.612673+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:14:00.618799+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:14:00.622453+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:14:00.692285+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73fe32"},"request_uri":"http://localhost/project-1/public/_wdt/73fe32","method":"GET"} []
[2022-05-14T10:14:00.693718+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:00.704097+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:14:00.836121+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73fe32"},"request_uri":"http://localhost/project-1/public/_wdt/73fe32","method":"GET"} []
[2022-05-14T10:14:00.837430+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:01.200277+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:01.204085+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:14:01.207714+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:14:01.212878+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:14:01.216998+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:14:01.267213+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cc77e"},"request_uri":"http://localhost/project-1/public/_wdt/3cc77e","method":"GET"} []
[2022-05-14T10:14:01.270170+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:01.322359+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:14:01.420052+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3cc77e"},"request_uri":"http://localhost/project-1/public/_wdt/3cc77e","method":"GET"} []
[2022-05-14T10:14:01.421617+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:25.851169+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:25.853614+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/" (from "http://localhost/project-1/")" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/\" (from \"http://localhost/project-1/\") at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-14T10:14:25.856498+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:14:25.861762+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:14:25.865496+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:14:25.917251+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee4af8"},"request_uri":"http://localhost/project-1/public/_wdt/ee4af8","method":"GET"} []
[2022-05-14T10:14:25.919072+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:25.970655+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:14:26.065267+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee4af8"},"request_uri":"http://localhost/project-1/public/_wdt/ee4af8","method":"GET"} []
[2022-05-14T10:14:26.067087+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerFgnYW3d/App_KernelDevDebugContainer.php","line":1103,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:45.694830+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:14:45.702687+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:14:45.730382+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/Container922wfuc/App_KernelDevDebugContainer.php","line":1104,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:14:45.741209+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:14:45.749207+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:14:45.754662+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:14:45.838570+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:14:45.930183+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5baadb"},"request_uri":"http://localhost/project-1/public/_wdt/5baadb","method":"GET"} []
[2022-05-14T10:14:45.939712+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/Container922wfuc/App_KernelDevDebugContainer.php","line":1104,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:36:33.178985+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:36:33.186179+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:36:36.912596+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:36:36.925324+02:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2022-05-14T10:36:36.967794+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2022-05-14T10:36:36.968040+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:37:47.633739+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:37:47.641845+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:37:49.197915+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:37:49.200608+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:37:49.202347+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:37:49.210316+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:37:49.210690+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:37:49.214685+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:37:49.215037+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:37:49.215754+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:37:49.215976+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:37:49.217004+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:37:49.217512+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:37:49.224597+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2022-05-14T10:37:49.224801+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:38:27.052465+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:38:27.060677+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:27.064333+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:38:27.064967+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:38:27.065249+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:27.073923+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.074287+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:38:27.077031+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.077332+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:38:27.078001+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.078271+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:38:27.079125+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:38:27.079640+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:38:27.081244+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:38:27.082881+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:27.083803+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:27.084749+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.085023+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:38:27.086161+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.086441+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:38:27.086915+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.087181+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:38:27.087963+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:38:27.088323+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:38:27.088863+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:38:27.090266+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-14T10:38:27.090708+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.090924+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'project-1'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'project-1'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-14T10:38:27.091897+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:27.092724+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:38:27.093128+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:38:27.093390+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.093676+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:38:27.094791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.095040+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:38:27.095491+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:27.095754+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:38:27.096541+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:38:27.096869+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:38:27.098437+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:38:27.109602+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:38:27.113116+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:38:43.491574+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:38:43.500089+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:45.051487+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:38:45.054174+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:38:45.079971+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:38:45.088731+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:45.089136+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:38:45.092043+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:45.092372+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:38:45.093054+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:38:45.093318+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:38:45.094171+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:38:45.094693+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:38:45.098921+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:38:45.099617+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:38:45.099945+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:38:45.104266+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-14T10:38:45.125924+02:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE export_made_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE export_made_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-05-14T10:38:45.127518+02:00] doctrine.DEBUG: Executing query: CREATE TABLE export_made (id INT NOT NULL, name VARCHAR(255) NOT NULL, date VARCHAR(255) DEFAULT NULL, time VARCHAR(255) DEFAULT NULL, user_name VARCHAR(255) DEFAULT NULL, place VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE export_made (id INT NOT NULL, name VARCHAR(255) NOT NULL, date VARCHAR(255) DEFAULT NULL, time VARCHAR(255) DEFAULT NULL, user_name VARCHAR(255) DEFAULT NULL, place VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))"} []
[2022-05-14T10:38:45.132198+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220514083827","2":"2022-05-14 10:38:45","3":26}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220514083827","2":"2022-05-14 10:38:45","3":26},"types":{"1":2,"2":2,"3":1}} []
[2022-05-14T10:38:45.132918+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-14T10:38:45.134759+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:39:30.042810+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:39:30.050997+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:39:36.503375+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-14T10:39:36.519313+02:00] doctrine.DEBUG: Executing statement: DELETE FROM export_made {"sql":"DELETE FROM export_made"} []
[2022-05-14T10:39:36.520215+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.548485+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.548952+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.549379+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.549713+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.550004+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.550291+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.550584+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.550815+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.551029+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T10:39:36.561508+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"Test0","3":"2022-02-10","4":"20:33","5":"User","6":"Lokal0"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"Test0","3":"2022-02-10","4":"20:33","5":"User","6":"Lokal0"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.562120+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":2,"2":"Test1","3":"2022-02-11","4":"19:35","5":"User","6":"Lokal1"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":2,"2":"Test1","3":"2022-02-11","4":"19:35","5":"User","6":"Lokal1"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.562433+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":3,"2":"Test2","3":"2022-02-12","4":"17:19","5":"User","6":"Lokal2"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":3,"2":"Test2","3":"2022-02-12","4":"17:19","5":"User","6":"Lokal2"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.562685+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":4,"2":"Test3","3":"2022-02-13","4":"18:24","5":"User","6":"Lokal3"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":4,"2":"Test3","3":"2022-02-13","4":"18:24","5":"User","6":"Lokal3"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.562922+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":5,"2":"Test4","3":"2022-02-14","4":"20:24","5":"User","6":"Lokal4"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":5,"2":"Test4","3":"2022-02-14","4":"20:24","5":"User","6":"Lokal4"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.563159+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":6,"2":"Test5","3":"2022-02-15","4":"14:24","5":"User","6":"Lokal5"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":6,"2":"Test5","3":"2022-02-15","4":"14:24","5":"User","6":"Lokal5"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.563387+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":7,"2":"Test6","3":"2022-02-16","4":"18:17","5":"User","6":"Lokal6"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":7,"2":"Test6","3":"2022-02-16","4":"18:17","5":"User","6":"Lokal6"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.563610+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":8,"2":"Test7","3":"2022-02-17","4":"18:31","5":"User","6":"Lokal7"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":8,"2":"Test7","3":"2022-02-17","4":"18:31","5":"User","6":"Lokal7"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.563831+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":9,"2":"Test8","3":"2022-02-18","4":"18:33","5":"User","6":"Lokal8"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":9,"2":"Test8","3":"2022-02-18","4":"18:33","5":"User","6":"Lokal8"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.564070+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":10,"2":"Test9","3":"2022-02-19","4":"16:26","5":"User","6":"Lokal9"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}) {"sql":"INSERT INTO export_made (id, name, date, time, user_name, place) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":10,"2":"Test9","3":"2022-02-19","4":"16:26","5":"User","6":"Lokal9"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2}} []
[2022-05-14T10:39:36.564779+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-14T10:39:36.566778+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:49:18.630781+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:49:18.631654+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:49:18.661097+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:49:18.665704+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:49:18.690313+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:49:18.693982+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:49:18.696601+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:49:18.697190+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:49:18.697424+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:49:18.704809+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:49:18.705213+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:49:18.708312+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:49:18.708762+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:49:18.709680+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:49:18.710026+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:49:18.711101+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:49:18.711805+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:49:18.714611+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:49:18.717964+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:49:18.755934+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:49:18.899340+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61c26b"},"request_uri":"http://localhost/project-1/public/_wdt/61c26b","method":"GET"} []
[2022-05-14T10:49:18.901242+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:50:08.899693+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:50:08.901061+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:50:08.907704+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:50:08.912897+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:50:08.921300+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:50:08.924946+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:50:08.928029+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:50:08.928945+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:50:08.929347+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:50:08.931099+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:50:08.931604+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:50:08.934560+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:50:08.934887+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:50:08.935566+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:50:08.935811+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:50:08.936618+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:50:08.937126+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:50:08.937880+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:50:08.939718+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:50:08.996403+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:50:09.120823+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4c3bc"},"request_uri":"http://localhost/project-1/public/_wdt/a4c3bc","method":"GET"} []
[2022-05-14T10:50:09.123021+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:00.288796+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:00.293142+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:00.301625+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:00.310710+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:00.323422+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:00.327453+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:00.330859+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:00.332087+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:00.332554+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:00.334285+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:00.334872+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:00.338482+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:00.338883+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:00.339704+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:00.340263+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:00.341933+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:00.343054+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:00.344735+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:00.352339+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:00.415391+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:00.564513+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57bfaf"},"request_uri":"http://localhost/project-1/public/_wdt/57bfaf","method":"GET"} []
[2022-05-14T10:51:00.566129+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:01.777737+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:01.778526+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:01.782290+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:01.787020+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:01.790010+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:01.792231+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:01.794722+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:01.795340+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:01.795645+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:01.796770+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:01.797029+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:01.799146+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:01.799431+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:01.800145+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:01.800418+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:01.801265+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:01.801779+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:01.802444+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:01.803862+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:01.838632+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:01.903487+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3945ce"},"request_uri":"http://localhost/project-1/public/_wdt/3945ce","method":"GET"} []
[2022-05-14T10:51:01.905080+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:20.436157+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:20.436993+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:20.441682+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:20.447071+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:20.455374+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:20.458228+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:20.460696+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:20.461268+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:20.461497+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:20.462623+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:20.462869+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:20.465120+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:20.465362+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:20.465973+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:20.466174+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:20.466940+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:20.467381+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:20.467994+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:20.469704+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:20.506123+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:20.592442+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a53e7"},"request_uri":"http://localhost/project-1/public/_wdt/8a53e7","method":"GET"} []
[2022-05-14T10:51:20.594308+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:21.244124+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:21.245212+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:21.249887+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:21.254999+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:21.257994+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:21.260206+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:21.262807+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:21.263600+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:21.263913+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:21.265137+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.265480+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:21.267693+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.267967+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:21.268778+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.269121+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:21.270205+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:21.271025+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:21.272153+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:21.274148+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.325493+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:21.402672+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4f535c"},"request_uri":"http://localhost/project-1/public/_wdt/4f535c","method":"GET"} []
[2022-05-14T10:51:21.404699+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:21.763273+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:21.764124+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:21.767558+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:21.773507+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:21.778618+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:21.781272+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:21.784067+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:21.784881+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:21.785229+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:21.786659+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.787048+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:21.789668+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.790047+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:21.790851+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.791152+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:21.792119+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:21.792689+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:21.793381+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:21.794834+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:21.830350+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:21.882321+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73ef77"},"request_uri":"http://localhost/project-1/public/_wdt/73ef77","method":"GET"} []
[2022-05-14T10:51:21.883423+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:33.213706+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T10:51:33.215003+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T10:51:33.222545+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T10:51:33.227920+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T10:51:33.238095+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T10:51:33.241186+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:33.244020+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T10:51:33.245039+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T10:51:33.245501+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T10:51:33.247228+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:33.247806+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T10:51:33.250705+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:33.251113+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T10:51:33.251930+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:33.252251+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T10:51:33.253190+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T10:51:33.253758+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T10:51:33.254550+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T10:51:33.256196+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T10:51:33.290556+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T10:51:33.395209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4ba15"},"request_uri":"http://localhost/project-1/public/_wdt/a4ba15","method":"GET"} []
[2022-05-14T10:51:33.396172+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerPFp7xDG/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:07.114149+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:04:07.115130+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:04:07.117521+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:07.119680+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $request of "App\Controller\ReportController::index()": it references class "Symfony\Component\BrowserKit\Request" but no such service exists." at /var/www/html/project-1/vendor/symfony/dependency-injection/Container.php line 416 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $request of \"App\\Controller\\ReportController::index()\": it references class \"Symfony\\Component\\BrowserKit\\Request\" but no such service exists. at /var/www/html/project-1/vendor/symfony/dependency-injection/Container.php:416)"} []
[2022-05-14T11:04:07.146440+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:04:07.151544+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:04:07.154135+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:04:07.154736+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:04:07.154968+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:04:07.156359+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:07.156598+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:04:07.158686+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:07.158908+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:04:07.159490+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:07.159690+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:04:07.160502+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:04:07.160948+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:04:07.161583+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:04:07.163765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:07.301742+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42af0e"},"request_uri":"http://localhost/project-1/public/_wdt/42af0e","method":"GET"} []
[2022-05-14T11:04:07.303197+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:07.380386+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:04:07.534973+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42af0e"},"request_uri":"http://localhost/project-1/public/_wdt/42af0e","method":"GET"} []
[2022-05-14T11:04:07.536213+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:37.350063+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:04:37.351374+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:04:37.357098+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:37.358873+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\RuntimeException: "Cannot autowire argument $request of "App\Controller\ReportController::index()": it references class "Symfony\Component\BrowserKit\Request" but no such service exists." at /var/www/html/project-1/vendor/symfony/dependency-injection/Container.php line 416 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException(code: 0): Cannot autowire argument $request of \"App\\Controller\\ReportController::index()\": it references class \"Symfony\\Component\\BrowserKit\\Request\" but no such service exists. at /var/www/html/project-1/vendor/symfony/dependency-injection/Container.php:416)"} []
[2022-05-14T11:04:37.375063+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:04:37.380816+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:04:37.383830+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:04:37.384489+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:04:37.384806+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:04:37.386370+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:37.386696+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:04:37.389052+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:37.389352+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:04:37.390022+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:37.390300+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:04:37.391156+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:04:37.391639+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:04:37.392279+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:04:37.393731+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:04:37.508111+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0a20e"},"request_uri":"http://localhost/project-1/public/_wdt/b0a20e","method":"GET"} []
[2022-05-14T11:04:37.510014+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:04:37.601439+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:04:37.749243+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0a20e"},"request_uri":"http://localhost/project-1/public/_wdt/b0a20e","method":"GET"} []
[2022-05-14T11:04:37.756690+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerJP0HWbx/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:36.058957+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:05:36.059933+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:05:36.089547+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:05:36.094794+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:05:36.102928+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Form\FormRenderer::renderBlock() must be an instance of Symfony\Component\Form\FormView, instance of Symfony\Component\Form\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Form\\FormRenderer::renderBlock() must be an instance of Symfony\\Component\\Form\\FormView, instance of Symfony\\Component\\Form\\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php:71)"} []
[2022-05-14T11:05:36.104581+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:36.105985+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 1 passed to Symfony\Component\Form\FormRenderer::renderBlock() must be an instance of Symfony\Component\Form\FormView, instance of Symfony\Component\Form\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95" at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php line 71 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Form\\FormRenderer::renderBlock() must be an instance of Symfony\\Component\\Form\\FormView, instance of Symfony\\Component\\Form\\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php:71)"} []
[2022-05-14T11:05:36.135324+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:05:36.137786+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:05:36.138394+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:05:36.138687+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:05:36.139875+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:36.140227+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:05:36.142740+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:36.143010+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:05:36.143650+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:36.143874+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:05:36.144683+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:05:36.145163+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:05:36.145882+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:05:36.148650+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:36.298848+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"267849"},"request_uri":"http://localhost/project-1/public/_wdt/267849","method":"GET"} []
[2022-05-14T11:05:36.299990+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:36.406784+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:05:36.577137+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"267849"},"request_uri":"http://localhost/project-1/public/_wdt/267849","method":"GET"} []
[2022-05-14T11:05:36.579034+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:57.933488+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:05:57.934725+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:05:57.974818+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:05:57.980255+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:05:57.984372+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Form\FormRenderer::renderBlock() must be an instance of Symfony\Component\Form\FormView, instance of Symfony\Component\Form\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Form\\FormRenderer::renderBlock() must be an instance of Symfony\\Component\\Form\\FormView, instance of Symfony\\Component\\Form\\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php:71)"} []
[2022-05-14T11:05:57.984885+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:57.986781+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 1 passed to Symfony\Component\Form\FormRenderer::renderBlock() must be an instance of Symfony\Component\Form\FormView, instance of Symfony\Component\Form\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95" at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php line 71 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Form\\FormRenderer::renderBlock() must be an instance of Symfony\\Component\\Form\\FormView, instance of Symfony\\Component\\Form\\Form given, called in /var/www/html/project-1/var/cache/dev/twig/5b/5bec236f53df26e172df623ac0b5c42851c47633624de58a27d283350e91e773.php on line 95 at /var/www/html/project-1/vendor/symfony/form/FormRenderer.php:71)"} []
[2022-05-14T11:05:58.016863+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:05:58.019302+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:05:58.019899+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:05:58.020181+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:05:58.021287+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:58.021593+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:05:58.023808+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:58.024059+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:05:58.024734+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:58.025010+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:05:58.025845+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:05:58.026360+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:05:58.027069+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:05:58.029018+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:05:58.149380+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f79b12"},"request_uri":"http://localhost/project-1/public/_wdt/f79b12","method":"GET"} []
[2022-05-14T11:05:58.151192+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:05:58.261843+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:05:58.432507+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f79b12"},"request_uri":"http://localhost/project-1/public/_wdt/f79b12","method":"GET"} []
[2022-05-14T11:05:58.434192+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:06:37.807360+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:06:37.808392+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:06:37.817144+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:06:37.822795+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:06:37.841751+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:06:37.844402+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:06:37.847396+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:06:37.848331+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:06:37.848698+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:06:37.850323+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:06:37.850737+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:06:37.853721+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:06:37.854106+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:06:37.854862+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:06:37.855165+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:06:37.856087+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:06:37.856652+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:06:37.857390+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:06:37.859092+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:06:37.899015+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:06:38.028367+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b80290"},"request_uri":"http://localhost/project-1/public/_wdt/b80290","method":"GET"} []
[2022-05-14T11:06:38.031376+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:07:41.102678+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:07:41.103983+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:07:41.120820+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:07:41.125981+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:07:41.134345+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:07:41.136869+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:07:41.139396+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:07:41.140059+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:07:41.140372+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:07:41.141632+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:07:41.141960+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:07:41.144548+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:07:41.144914+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:07:41.145645+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:07:41.145933+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:07:41.146853+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:07:41.147382+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:07:41.148132+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:07:41.149728+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:07:41.187713+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:07:41.300142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"606b6f"},"request_uri":"http://localhost/project-1/public/_wdt/606b6f","method":"GET"} []
[2022-05-14T11:07:41.302161+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:13.059230+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:08:13.060397+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:08:13.073654+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:08:13.078506+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:08:13.085199+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:13.087678+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:08:13.090395+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:08:13.091001+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:08:13.091307+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:08:13.092454+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:13.092748+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:08:13.094987+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:13.095304+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:08:13.095964+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:13.096222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:08:13.097249+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:08:13.098009+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:08:13.098983+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:08:13.101054+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:13.167458+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:08:13.309143+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b57059"},"request_uri":"http://localhost/project-1/public/_wdt/b57059","method":"GET"} []
[2022-05-14T11:08:13.310674+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:16.838531+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:08:16.839803+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:08:16.852379+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:16.853699+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Can't get a way to read the property "start" in class "App\Entity\ExportMade"." at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php line 511 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"start\" in class \"App\\Entity\\ExportMade\". at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php:511)"} []
[2022-05-14T11:08:16.878612+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:08:16.883294+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:08:16.885844+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:08:16.886395+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:08:16.886647+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:08:16.887750+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:16.888026+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:08:16.890240+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:16.890545+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:08:16.891228+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:16.891489+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:08:16.892328+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:08:16.892861+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:08:16.893583+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:08:16.895103+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:08:16.969602+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba1cbd"},"request_uri":"http://localhost/project-1/public/_wdt/ba1cbd","method":"GET"} []
[2022-05-14T11:08:16.971487+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:17.129808+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba1cbd"},"request_uri":"http://localhost/project-1/public/_wdt/ba1cbd","method":"GET"} []
[2022-05-14T11:08:17.131962+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:08:17.152564+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:08:17.519924+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba1cbd"},"request_uri":"http://localhost/project-1/public/_wdt/ba1cbd","method":"GET"} []
[2022-05-14T11:08:17.520833+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:02.496611+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:10:02.498566+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:10:02.508249+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:02.509835+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Can't get a way to read the property "start" in class "App\Entity\ExportMade"." at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php line 511 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"start\" in class \"App\\Entity\\ExportMade\". at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php:511)"} []
[2022-05-14T11:10:02.541409+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:10:02.547321+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:02.550578+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:10:02.551238+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:10:02.551517+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:02.553175+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:02.553530+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:10:02.556066+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:02.556370+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:10:02.557097+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:02.557343+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:10:02.558232+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:10:02.558753+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:10:02.559428+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:10:02.561032+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:02.628713+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0cfd4"},"request_uri":"http://localhost/project-1/public/_wdt/f0cfd4","method":"GET"} []
[2022-05-14T11:10:02.630515+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:02.786276+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0cfd4"},"request_uri":"http://localhost/project-1/public/_wdt/f0cfd4","method":"GET"} []
[2022-05-14T11:10:02.787240+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:02.820934+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:10:03.175121+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f0cfd4"},"request_uri":"http://localhost/project-1/public/_wdt/f0cfd4","method":"GET"} []
[2022-05-14T11:10:03.176226+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:04.360254+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:10:04.361935+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:10:04.374938+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:10:04.380777+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:10:04.391076+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:04.394299+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:04.396944+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:10:04.397632+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:10:04.397934+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:04.399471+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.399994+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:10:04.402887+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.403324+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:10:04.404370+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.404779+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:10:04.405970+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:10:04.406612+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:10:04.407336+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:10:04.408959+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.445361+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:10:04.517878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8224d0"},"request_uri":"http://localhost/project-1/public/_wdt/8224d0","method":"GET"} []
[2022-05-14T11:10:04.519149+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:04.954645+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:10:04.955420+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:10:04.961501+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:10:04.966208+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.date AS date_3, t0.time AS time_4, t0.user_name AS user_name_5, t0.place AS place_6 FROM export_made t0"} []
[2022-05-14T11:10:04.972653+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:04.974627+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:04.977134+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:10:04.977766+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:10:04.978067+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:04.979166+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.979472+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:10:04.981812+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.982237+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:10:04.983279+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:04.983694+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:10:04.984881+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:10:04.985679+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:10:04.986589+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:10:04.988530+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:05.024985+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:10:05.082300+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"954d82"},"request_uri":"http://localhost/project-1/public/_wdt/954d82","method":"GET"} []
[2022-05-14T11:10:05.083451+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:05.999323+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:10:06.001188+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:10:06.011505+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:06.013401+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\PropertyAccess\Exception\NoSuchPropertyException: "Can't get a way to read the property "start" in class "App\Entity\ExportMade"." at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php line 511 {"exception":"[object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Can't get a way to read the property \"start\" in class \"App\\Entity\\ExportMade\". at /var/www/html/project-1/vendor/symfony/property-access/PropertyAccessor.php:511)"} []
[2022-05-14T11:10:06.039923+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:10:06.044801+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:06.047284+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:10:06.047853+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:10:06.048120+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:10:06.049560+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:06.050304+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:10:06.052997+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:06.053535+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:10:06.054515+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:06.054919+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:10:06.056089+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:10:06.056824+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:10:06.057702+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:10:06.059329+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:10:06.123030+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcd897"},"request_uri":"http://localhost/project-1/public/_wdt/bcd897","method":"GET"} []
[2022-05-14T11:10:06.124176+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:06.286053+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcd897"},"request_uri":"http://localhost/project-1/public/_wdt/bcd897","method":"GET"} []
[2022-05-14T11:10:06.286989+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:10:06.298913+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:10:06.674892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcd897"},"request_uri":"http://localhost/project-1/public/_wdt/bcd897","method":"GET"} []
[2022-05-14T11:10:06.676163+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:16:56.181500+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:16:56.189801+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:16:56.193529+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:16:56.194188+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:16:56.194508+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:16:56.203302+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.203667+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:16:56.206464+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.206799+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:16:56.207528+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.207802+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:16:56.208714+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:16:56.209221+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:16:56.210911+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:16:56.212525+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:16:56.213453+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:16:56.214354+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.214622+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:16:56.215764+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.215999+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:16:56.216521+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.216795+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:16:56.217614+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:16:56.217976+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:16:56.218529+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:16:56.219934+02:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-14T11:16:56.220348+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.220599+02:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'project-1'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'project-1'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-14T11:16:56.221994+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:16:56.222851+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:16:56.223237+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:16:56.223494+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.223740+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:16:56.224896+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.225186+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:16:56.225714+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:16:56.225993+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:16:56.226863+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:16:56.227245+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:16:56.228876+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:16:56.243323+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:16:56.246366+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:17:20.295167+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:17:20.303372+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:17:22.687168+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:17:22.689796+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:17:22.690387+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:17:22.698230+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:17:22.698579+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:17:22.701735+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:17:22.702119+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:17:22.702921+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:17:22.703222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:17:22.704208+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:17:22.704776+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:17:22.708931+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:17:22.709917+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:17:22.710459+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:17:22.714835+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-14T11:17:22.737471+02:00] doctrine.DEBUG: Executing query: CREATE TABLE export_made (id INT NOT NULL, name VARCHAR(255) NOT NULL, creation_date VARCHAR(255) DEFAULT NULL, user_name VARCHAR(255) DEFAULT NULL, place VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE export_made (id INT NOT NULL, name VARCHAR(255) NOT NULL, creation_date VARCHAR(255) DEFAULT NULL, user_name VARCHAR(255) DEFAULT NULL, place VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))"} []
[2022-05-14T11:17:22.779310+02:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220514091656","2":"2022-05-14 11:17:22","3":63}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220514091656","2":"2022-05-14 11:17:22","3":63},"types":{"1":2,"2":2,"3":1}} []
[2022-05-14T11:17:22.779879+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-14T11:17:22.783548+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:17:32.835021+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:17:32.843286+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:17:37.956791+02:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-14T11:17:37.974013+02:00] doctrine.DEBUG: Executing statement: DELETE FROM export_made {"sql":"DELETE FROM export_made"} []
[2022-05-14T11:17:37.985612+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.986297+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.986642+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.986936+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.987203+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.987468+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.987749+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.987984+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.988253+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.988509+02:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('export_made_id_seq') {"sql":"SELECT NEXTVAL('export_made_id_seq')"} []
[2022-05-14T11:17:37.996350+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"Test0","3":"2022-02-10 10:26:00","4":"User","5":"Lokal0"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":11,"2":"Test0","3":"2022-02-10 10:26:00","4":"User","5":"Lokal0"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.996982+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"Test1","3":"2022-02-11 12:21:00","4":"User","5":"Lokal1"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":12,"2":"Test1","3":"2022-02-11 12:21:00","4":"User","5":"Lokal1"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.997300+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"Test2","3":"2022-02-12 13:19:00","4":"User","5":"Lokal2"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":13,"2":"Test2","3":"2022-02-12 13:19:00","4":"User","5":"Lokal2"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.997596+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"Test3","3":"2022-02-13 18:30:00","4":"User","5":"Lokal3"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":14,"2":"Test3","3":"2022-02-13 18:30:00","4":"User","5":"Lokal3"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.997871+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"Test4","3":"2022-02-14 12:22:00","4":"User","5":"Lokal4"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":15,"2":"Test4","3":"2022-02-14 12:22:00","4":"User","5":"Lokal4"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.998182+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"Test5","3":"2022-02-15 15:15:00","4":"User","5":"Lokal5"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":16,"2":"Test5","3":"2022-02-15 15:15:00","4":"User","5":"Lokal5"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.998455+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"Test6","3":"2022-02-16 17:21:00","4":"User","5":"Lokal6"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":17,"2":"Test6","3":"2022-02-16 17:21:00","4":"User","5":"Lokal6"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.998755+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"Test7","3":"2022-02-17 16:30:00","4":"User","5":"Lokal7"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":18,"2":"Test7","3":"2022-02-17 16:30:00","4":"User","5":"Lokal7"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.999006+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"Test8","3":"2022-02-18 15:35:00","4":"User","5":"Lokal8"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":19,"2":"Test8","3":"2022-02-18 15:35:00","4":"User","5":"Lokal8"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.999243+02:00] doctrine.DEBUG: Executing statement: INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"Test9","3":"2022-02-19 15:31:00","4":"User","5":"Lokal9"}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2}) {"sql":"INSERT INTO export_made (id, name, creation_date, user_name, place) VALUES (?, ?, ?, ?, ?)","params":{"1":20,"2":"Test9","3":"2022-02-19 15:31:00","4":"User","5":"Lokal9"},"types":{"1":1,"2":2,"3":2,"4":2,"5":2}} []
[2022-05-14T11:17:37.999932+02:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-14T11:17:38.005270+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:18:54.978873+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:18:54.980244+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:18:54.991251+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:18:54.996275+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T11:18:55.009818+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:18:55.012387+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:18:55.014817+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:18:55.015372+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:18:55.015603+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:18:55.016714+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:55.016946+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:18:55.019059+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:55.019281+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:18:55.019858+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:55.020063+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:18:55.020824+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:18:55.021264+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:18:55.021846+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:18:55.023487+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:55.060262+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:18:55.217968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1985ff"},"request_uri":"http://localhost/project-1/public/_wdt/1985ff","method":"GET"} []
[2022-05-14T11:18:55.219266+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:18:59.200874+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:18:59.201668+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:18:59.209796+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:18:59.215584+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T11:18:59.223534+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:18:59.226204+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:18:59.229133+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:18:59.230093+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:18:59.230502+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:18:59.231961+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:59.232508+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:18:59.235257+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:59.235614+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:18:59.236329+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:59.236595+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:18:59.237487+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:18:59.238015+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:18:59.238707+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:18:59.240239+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:18:59.278001+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:18:59.341503+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a1c2c5"},"request_uri":"http://localhost/project-1/public/_wdt/a1c2c5","method":"GET"} []
[2022-05-14T11:18:59.344516+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:23:49.375235+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T11:23:49.376221+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:23:49.384953+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:23:49.390020+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T11:23:49.398802+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:23:49.401659+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:23:49.404352+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:23:49.405057+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:23:49.405356+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:23:49.406588+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:23:49.406923+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:23:49.409225+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:23:49.409559+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:23:49.410307+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:23:49.410594+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:23:49.411539+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:23:49.412105+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:23:49.412885+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:23:49.414474+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:23:49.452044+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:23:49.589402+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e589a0"},"request_uri":"http://localhost/project-1/public/_wdt/e589a0","method":"GET"} []
[2022-05-14T11:23:49.590916+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:04.553370+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:41:04.554867+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:41:04.729246+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:41:04.734058+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T11:41:04.742031+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:04.744874+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:04.747395+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:41:04.748003+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:41:04.748306+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:04.749483+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:04.749785+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:41:04.752316+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:04.752759+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:41:04.753738+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:04.754191+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:41:04.755352+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:41:04.755959+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:41:04.756673+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:41:04.759111+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:04.813706+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:41:04.956738+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cd2985"},"request_uri":"http://localhost/project-1/public/_wdt/cd2985","method":"GET"} []
[2022-05-14T11:41:04.958008+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:36.941953+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:41:36.943926+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:41:37.160563+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, null given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, null given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:41:37.160953+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:37.162422+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 1 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, null given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, null given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:41:37.175838+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:41:37.181469+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:37.184159+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:41:37.185022+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:41:37.185432+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:37.187092+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:37.187716+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:41:37.190476+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:37.190877+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:41:37.191811+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:37.192210+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:41:37.193473+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:41:37.194405+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:41:37.195306+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:41:37.197179+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:37.334151+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"445a61"},"request_uri":"http://localhost/project-1/public/_wdt/445a61","method":"GET"} []
[2022-05-14T11:41:37.340176+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:37.452818+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:41:37.592464+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"445a61"},"request_uri":"http://localhost/project-1/public/_wdt/445a61","method":"GET"} []
[2022-05-14T11:41:37.593916+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:54.492920+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:41:54.494226+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:41:54.684713+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:41:54.685083+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:54.686883+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:41:54.701045+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:41:54.705889+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:54.708445+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:41:54.709047+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:41:54.709347+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:41:54.710458+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:54.710762+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:41:54.712926+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:54.713220+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:41:54.713863+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:54.714121+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:41:54.714939+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:41:54.715428+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:41:54.716107+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:41:54.718769+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:41:54.842601+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"512bfe"},"request_uri":"http://localhost/project-1/public/_wdt/512bfe","method":"GET"} []
[2022-05-14T11:41:54.845208+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:41:54.965884+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:41:55.117000+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"512bfe"},"request_uri":"http://localhost/project-1/public/_wdt/512bfe","method":"GET"} []
[2022-05-14T11:41:55.119417+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:13.390231+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:42:13.393720+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:42:13.696524+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:13.697121+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:13.699078+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:13.716732+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:42:13.723456+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:13.726776+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:42:13.727586+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:42:13.727970+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:13.729465+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:13.729854+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:42:13.732706+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:13.733070+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:42:13.733907+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:13.734250+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:42:13.735314+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:42:13.735947+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:42:13.736780+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:42:13.738681+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:13.875901+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1652d2"},"request_uri":"http://localhost/project-1/public/_wdt/1652d2","method":"GET"} []
[2022-05-14T11:42:13.878310+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:13.994301+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:42:14.178351+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1652d2"},"request_uri":"http://localhost/project-1/public/_wdt/1652d2","method":"GET"} []
[2022-05-14T11:42:14.180165+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:16.340338+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:42:16.341620+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:42:16.541459+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:16.541941+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:16.543272+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:16.556028+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:42:16.560940+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:16.563530+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:42:16.564111+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:42:16.564409+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:16.565536+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:16.565844+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:42:16.568012+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:16.568303+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:42:16.568961+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:16.569240+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:42:16.570110+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:42:16.570628+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:42:16.571296+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:42:16.572848+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:16.638766+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"790660"},"request_uri":"http://localhost/project-1/public/_wdt/790660","method":"GET"} []
[2022-05-14T11:42:16.640267+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:16.754329+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:42:16.833521+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"790660"},"request_uri":"http://localhost/project-1/public/_wdt/790660","method":"GET"} []
[2022-05-14T11:42:16.834888+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:34.514769+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:42:34.516508+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:42:34.762288+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:34.762899+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:34.764506+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:34.779712+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:42:34.785465+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:34.788542+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:42:34.789294+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:42:34.789652+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:34.790992+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:34.791325+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:42:34.793936+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:34.794285+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:42:34.795069+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:34.795369+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:42:34.796398+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:42:34.797027+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:42:34.797837+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:42:34.799638+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:34.936287+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d52374"},"request_uri":"http://localhost/project-1/public/_wdt/d52374","method":"GET"} []
[2022-05-14T11:42:34.939484+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:35.056813+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:42:35.223875+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d52374"},"request_uri":"http://localhost/project-1/public/_wdt/d52374","method":"GET"} []
[2022-05-14T11:42:35.225040+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:54.099449+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:42:54.101110+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:42:54.340556+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:54.340985+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:54.342624+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:54.359162+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:42:54.364923+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:54.368229+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:42:54.369351+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:42:54.369944+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:54.371840+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:54.372443+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:42:54.375662+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:54.376058+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:42:54.376910+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:54.377236+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:42:54.378262+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:42:54.378886+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:42:54.379668+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:42:54.382457+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:54.531774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ab761"},"request_uri":"http://localhost/project-1/public/_wdt/6ab761","method":"GET"} []
[2022-05-14T11:42:54.533961+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:54.661703+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:42:54.842944+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ab761"},"request_uri":"http://localhost/project-1/public/_wdt/6ab761","method":"GET"} []
[2022-05-14T11:42:54.844949+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:57.783598+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:42:57.788941+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:42:58.139610+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:58.140260+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:58.142728+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 35 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:42:58.164296+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:42:58.172448+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:58.177625+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:42:58.178748+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:42:58.179253+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:42:58.181227+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:58.181802+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:42:58.185561+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:58.186027+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:42:58.187073+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:58.187436+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:42:58.188944+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:42:58.189718+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:42:58.190691+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:42:58.193375+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:42:58.324927+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8c7ab"},"request_uri":"http://localhost/project-1/public/_wdt/d8c7ab","method":"GET"} []
[2022-05-14T11:42:58.327692+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:58.484044+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8c7ab"},"request_uri":"http://localhost/project-1/public/_wdt/d8c7ab","method":"GET"} []
[2022-05-14T11:42:58.485711+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:42:58.510888+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:42:58.882389+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8c7ab"},"request_uri":"http://localhost/project-1/public/_wdt/d8c7ab","method":"GET"} []
[2022-05-14T11:42:58.884079+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:22.029497+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:43:22.030791+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:43:22.246715+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:43:22.247214+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:22.248630+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 42 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be of the type string or null, object given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:42)"} []
[2022-05-14T11:43:22.264021+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:43:22.269304+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:43:22.272066+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:43:22.272708+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:43:22.273019+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:43:22.274209+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:22.274533+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:43:22.276893+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:22.277218+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:43:22.277923+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:22.278234+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:43:22.279168+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:43:22.279727+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:43:22.280464+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:43:22.282204+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:22.435825+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de3db2"},"request_uri":"http://localhost/project-1/public/_wdt/de3db2","method":"GET"} []
[2022-05-14T11:43:22.437761+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:22.531005+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:43:22.697059+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de3db2"},"request_uri":"http://localhost/project-1/public/_wdt/de3db2","method":"GET"} []
[2022-05-14T11:43:22.698705+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:49.958498+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:43:49.959871+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:43:50.154137+02:00] php.CRITICAL: Uncaught Error: Object of class DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class DateTime could not be converted to string at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:51)"} []
[2022-05-14T11:43:50.154511+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:50.156321+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class DateTime could not be converted to string" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 51 {"exception":"[object] (Error(code: 0): Object of class DateTime could not be converted to string at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:51)"} []
[2022-05-14T11:43:50.169684+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:43:50.174540+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:43:50.177230+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:43:50.177903+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:43:50.178211+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:43:50.179358+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:50.179674+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:43:50.181958+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:50.182333+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:43:50.183488+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:50.183931+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:43:50.185722+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:43:50.186462+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:43:50.187207+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:43:50.190101+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:43:50.302066+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc39cc"},"request_uri":"http://localhost/project-1/public/_wdt/fc39cc","method":"GET"} []
[2022-05-14T11:43:50.303752+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:43:50.400400+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:43:50.562061+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc39cc"},"request_uri":"http://localhost/project-1/public/_wdt/fc39cc","method":"GET"} []
[2022-05-14T11:43:50.563777+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:48:05.090586+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:48:05.091916+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:48:05.295991+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:48:05.297748+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 66 near 'creation_date': Error: Class App\Entity\ExportMade has no field or association named creation_date" at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 66 near 'creation_date': Error: Class App\\Entity\\ExportMade has no field or association named creation_date at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e WHERE e.place =:place AND e.creation_date <= :from AND e.creation_date >= :to at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T11:48:05.419576+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:48:05.424543+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:48:05.427744+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:48:05.428731+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:48:05.429138+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:48:05.430630+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:48:05.431128+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:48:05.433682+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:48:05.434027+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:48:05.434726+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:48:05.435005+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:48:05.435866+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:48:05.436390+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:48:05.437111+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:48:05.439608+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:48:05.561128+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ab449"},"request_uri":"http://localhost/project-1/public/_wdt/2ab449","method":"GET"} []
[2022-05-14T11:48:05.562960+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:48:05.741420+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ab449"},"request_uri":"http://localhost/project-1/public/_wdt/2ab449","method":"GET"} []
[2022-05-14T11:48:05.742861+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:48:05.755470+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:48:06.134484+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ab449"},"request_uri":"http://localhost/project-1/public/_wdt/2ab449","method":"GET"} []
[2022-05-14T11:48:06.135483+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:50:07.787428+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:50:07.789923+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:50:08.000352+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:50:08.001892+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 66 near 'creation_date': Error: Class App\Entity\ExportMade has no field or association named creation_date" at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 66 near 'creation_date': Error: Class App\\Entity\\ExportMade has no field or association named creation_date at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e WHERE e.place =:place AND e.creation_date <= :from AND e.creation_date >= :to at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T11:50:08.117782+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:50:08.122609+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:50:08.125282+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:50:08.125913+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:50:08.126218+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:50:08.127424+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:50:08.127727+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:50:08.129970+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:50:08.130269+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:50:08.130944+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:50:08.131226+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:50:08.132078+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:50:08.132607+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:50:08.133293+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:50:08.134905+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:50:08.255207+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d13f14"},"request_uri":"http://localhost/project-1/public/_wdt/d13f14","method":"GET"} []
[2022-05-14T11:50:08.257035+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:50:08.426466+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d13f14"},"request_uri":"http://localhost/project-1/public/_wdt/d13f14","method":"GET"} []
[2022-05-14T11:50:08.427485+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:50:08.445650+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:50:08.816536+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d13f14"},"request_uri":"http://localhost/project-1/public/_wdt/d13f14","method":"GET"} []
[2022-05-14T11:50:08.817482+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:50:12.987214+02:00] request.INFO: Matched route "_profiler_open_file". {"route":"_profiler_open_file","route_parameters":{"_route":"_profiler_open_file","_controller":"web_profiler.controller.profiler::openAction"},"request_uri":"http://localhost/project-1/public/_profiler/open?file=vendor%2Fdoctrine%2Form%2Flib%2FDoctrine%2FORM%2FAbstractQuery.php&line=930","method":"GET"} []
[2022-05-14T11:50:12.988487+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:51:02.520061+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:51:02.521445+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:51:02.731812+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:51:02.738141+02:00] php.CRITICAL: Uncaught Error: Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T11:51:02.738533+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:51:02.739858+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php line 50 {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T11:51:02.773749+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:51:02.776732+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:51:02.777516+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:51:02.777862+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:51:02.779203+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:51:02.779585+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:51:02.782184+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:51:02.782547+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:51:02.783369+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:51:02.783701+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:51:02.784763+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:51:02.785414+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:51:02.786242+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:51:02.788189+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:51:02.903211+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f5267"},"request_uri":"http://localhost/project-1/public/_wdt/3f5267","method":"GET"} []
[2022-05-14T11:51:02.904815+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:51:03.047972+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:51:03.190688+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f5267"},"request_uri":"http://localhost/project-1/public/_wdt/3f5267","method":"GET"} []
[2022-05-14T11:51:03.191581+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:52:09.231365+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:52:09.232857+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:52:09.439711+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:52:09.444846+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place = ? AND e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":null,"2":"2017-01-01 00:00:00","3":"2021-04-04 00:00:00"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place = ? AND e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":null,"2":"2017-01-01 00:00:00","3":"2021-04-04 00:00:00"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T11:52:09.456674+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:52:09.459181+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:52:09.461724+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:52:09.462650+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:52:09.463143+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:52:09.464960+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:52:09.465493+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:52:09.468412+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:52:09.468829+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:52:09.469639+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:52:09.469923+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:52:09.470827+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:52:09.471325+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:52:09.472223+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:52:09.474151+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:52:09.521041+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:52:09.694410+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bfa4f2"},"request_uri":"http://localhost/project-1/public/_wdt/bfa4f2","method":"GET"} []
[2022-05-14T11:52:09.695851+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:52:41.403783+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"bfa4f2"},"request_uri":"http://localhost/project-1/public/_profiler/bfa4f2?panel=db","method":"GET"} []
[2022-05-14T11:52:41.405648+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:52:59.614383+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"bfa4f2"},"request_uri":"http://localhost/project-1/public/_profiler/bfa4f2?connection=default&page=explain&panel=db&query=1","method":"GET"} []
[2022-05-14T11:52:59.615827+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:52:59.631878+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:52:59.637750+02:00] doctrine.DEBUG: Executing statement: EXPLAIN SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place = ? AND e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":null,"2":"2017-01-01 00:00:00","3":"2021-04-04 00:00:00"}, types: array{"1":2,"2":2,"3":2}) {"sql":"EXPLAIN SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place = ? AND e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":null,"2":"2017-01-01 00:00:00","3":"2021-04-04 00:00:00"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T11:52:59.643528+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:56:49.043154+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:56:49.044456+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:56:49.238482+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:56:49.239721+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "Too many parameters: the query defines 2 parameters and you bound 3" at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 83 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): Too many parameters: the query defines 2 parameters and you bound 3 at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:83)"} []
[2022-05-14T11:56:49.263185+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:56:49.267951+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:56:49.270589+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:56:49.271198+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:56:49.271501+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:56:49.272624+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:56:49.272925+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:56:49.275134+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:56:49.275451+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:56:49.276108+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:56:49.276375+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:56:49.277248+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:56:49.277780+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:56:49.278493+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:56:49.280157+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:56:49.417218+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9912e5"},"request_uri":"http://localhost/project-1/public/_wdt/9912e5","method":"GET"} []
[2022-05-14T11:56:49.418831+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:56:49.537345+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:56:49.678655+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9912e5"},"request_uri":"http://localhost/project-1/public/_wdt/9912e5","method":"GET"} []
[2022-05-14T11:56:49.679516+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:14.038579+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:57:14.040863+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:57:14.280001+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:14.281518+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "Too many parameters: the query defines 2 parameters and you bound 3" at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 83 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): Too many parameters: the query defines 2 parameters and you bound 3 at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:83)"} []
[2022-05-14T11:57:14.307337+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:57:14.312169+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:14.314872+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:57:14.315548+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:57:14.315874+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:14.317018+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:14.317321+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:57:14.319559+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:14.319839+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:57:14.320491+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:14.320766+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:57:14.321600+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:57:14.322106+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:57:14.322773+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:57:14.324348+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:14.425503+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f7782"},"request_uri":"http://localhost/project-1/public/_wdt/8f7782","method":"GET"} []
[2022-05-14T11:57:14.426871+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:14.534120+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:57:14.690618+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f7782"},"request_uri":"http://localhost/project-1/public/_wdt/8f7782","method":"GET"} []
[2022-05-14T11:57:14.691850+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:28.099471+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:57:28.101685+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:57:28.382639+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:57:28.388155+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":"2017-01-01 00:00:00","2":"2021-04-04 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":"2017-01-01 00:00:00","2":"2021-04-04 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:57:28.398913+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:28.401690+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:28.404341+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:57:28.405042+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:57:28.405366+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:28.406770+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:28.407204+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:57:28.410328+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:28.410855+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:57:28.411886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:28.412292+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:57:28.413568+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:57:28.414395+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:57:28.415286+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:57:28.417177+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:28.469360+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:57:28.599951+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f685c"},"request_uri":"http://localhost/project-1/public/_wdt/3f685c","method":"GET"} []
[2022-05-14T11:57:28.601094+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:48.988588+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:57:48.990721+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:57:49.190213+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:57:49.195135+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-12 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-12 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:57:49.204375+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:49.207948+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:49.210257+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:57:49.210894+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:57:49.211196+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:49.212314+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:49.212612+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:57:49.214735+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:49.215038+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:57:49.215712+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:49.215932+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:57:49.216799+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:57:49.217323+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:57:49.218065+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:57:49.219720+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:49.265253+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:57:49.390806+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23c927"},"request_uri":"http://localhost/project-1/public/_wdt/23c927","method":"GET"} []
[2022-05-14T11:57:49.392653+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:56.242890+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:57:56.244942+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:57:56.439086+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:57:56.443894+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-14 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-14 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:57:56.452173+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:56.454704+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:56.457360+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:57:56.458330+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:57:56.458769+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:57:56.460293+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:56.460811+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:57:56.463461+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:56.463807+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:57:56.464547+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:56.464811+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:57:56.465653+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:57:56.466158+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:57:56.466884+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:57:56.468487+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:57:56.513790+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:57:56.599842+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bdfd1f"},"request_uri":"http://localhost/project-1/public/_wdt/bdfd1f","method":"GET"} []
[2022-05-14T11:57:56.601903+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:57:59.866388+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:57:59.868250+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:58:00.110352+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:58:00.115184+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date <= ? AND e0_.creation_date >= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:58:00.123185+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:58:00.126103+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:58:00.128744+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:58:00.129619+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:58:00.130015+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:58:00.131428+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:58:00.131791+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:58:00.134027+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:58:00.134330+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:58:00.134997+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:58:00.135267+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:58:00.136121+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:58:00.136669+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:58:00.137353+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:58:00.138930+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:58:00.183820+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:58:00.260725+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f78e4a"},"request_uri":"http://localhost/project-1/public/_wdt/f78e4a","method":"GET"} []
[2022-05-14T11:58:00.262672+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:58:03.701585+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"f78e4a"},"request_uri":"http://localhost/project-1/public/_profiler/f78e4a?panel=db","method":"GET"} []
[2022-05-14T11:58:03.703047+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:58:06.412724+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"f78e4a"},"request_uri":"http://localhost/project-1/public/_profiler/f78e4a?panel=db","method":"GET"} []
[2022-05-14T11:58:06.414537+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:07.468269+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:59:07.469496+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:59:07.658009+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:59:07.663315+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:59:07.665959+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:07.667175+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\NonUniqueResultException: "More than one result was found for query although one row or none was expected." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/AbstractQuery.php line 944 {"exception":"[object] (Doctrine\\ORM\\NonUniqueResultException(code: 0): More than one result was found for query although one row or none was expected. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/AbstractQuery.php:944)"} []
[2022-05-14T11:59:07.682313+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:07.684673+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:59:07.685264+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:59:07.685553+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:07.686660+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:07.686957+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:59:07.689101+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:07.689431+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:59:07.690321+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:07.690710+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:59:07.691857+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:59:07.692592+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:59:07.693510+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:59:07.695188+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:07.805427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b23a22"},"request_uri":"http://localhost/project-1/public/_wdt/b23a22","method":"GET"} []
[2022-05-14T11:59:07.806892+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:07.901011+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:59:08.054245+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b23a22"},"request_uri":"http://localhost/project-1/public/_wdt/b23a22","method":"GET"} []
[2022-05-14T11:59:08.055457+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:51.464040+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:59:51.465739+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:59:51.701447+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:59:51.707107+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:59:51.717232+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:51.720141+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:51.723326+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:59:51.724364+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:59:51.724881+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:51.726550+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:51.727098+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:59:51.729851+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:51.730146+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:59:51.730869+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:51.731104+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:59:51.732033+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:59:51.732545+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:59:51.733250+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:59:51.735052+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:51.789256+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:59:51.928786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"67b601"},"request_uri":"http://localhost/project-1/public/_wdt/67b601","method":"GET"} []
[2022-05-14T11:59:51.930401+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:56.789732+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T11:59:56.791113+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T11:59:56.982890+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T11:59:56.987825+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 00:00:00"},"types":{"1":2,"2":2}} []
[2022-05-14T11:59:56.995937+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:56.998180+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:57.000485+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T11:59:57.001079+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T11:59:57.001374+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T11:59:57.002491+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:57.002793+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T11:59:57.004923+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:57.005221+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T11:59:57.005889+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:57.006191+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T11:59:57.007288+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T11:59:57.007958+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T11:59:57.009038+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T11:59:57.011263+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T11:59:57.056147+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T11:59:57.128492+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45f923"},"request_uri":"http://localhost/project-1/public/_wdt/45f923","method":"GET"} []
[2022-05-14T11:59:57.129876+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T11:59:59.363533+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"45f923"},"request_uri":"http://localhost/project-1/public/_profiler/45f923?panel=db","method":"GET"} []
[2022-05-14T11:59:59.365014+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:01:48.163883+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:01:48.165212+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:01:48.364737+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:01:48.370037+02:00] php.CRITICAL: Uncaught Error: Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:01:48.370500+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:01:48.372187+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php line 50 {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:01:48.406243+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:01:48.409228+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:01:48.410110+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:01:48.410532+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:01:48.412030+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:01:48.412466+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:01:48.414827+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:01:48.415149+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:01:48.415818+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:01:48.416049+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:01:48.416904+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:01:48.417422+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:01:48.418106+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:01:48.419782+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:01:48.544362+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f48660"},"request_uri":"http://localhost/project-1/public/_wdt/f48660","method":"GET"} []
[2022-05-14T12:01:48.546175+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:01:48.690177+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:01:48.833809+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f48660"},"request_uri":"http://localhost/project-1/public/_wdt/f48660","method":"GET"} []
[2022-05-14T12:01:48.835020+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:24.305380+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:05:24.306833+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:05:24.497830+02:00] php.CRITICAL: Uncaught Error: Argument 3 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 {"exception":"[object] (TypeError(code: 0): Argument 3 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:24.498275+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:24.500001+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 3 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 47 {"exception":"[object] (TypeError(code: 0): Argument 3 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:24.513974+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:05:24.519267+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:24.521810+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:05:24.522419+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:05:24.522727+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:24.523872+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:24.524200+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:05:24.526411+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:24.526714+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:05:24.527384+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:24.527658+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:05:24.528486+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:05:24.529006+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:05:24.529713+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:05:24.532155+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:24.640615+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9738d"},"request_uri":"http://localhost/project-1/public/_wdt/c9738d","method":"GET"} []
[2022-05-14T12:05:24.642198+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:24.740952+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:05:24.899765+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c9738d"},"request_uri":"http://localhost/project-1/public/_wdt/c9738d","method":"GET"} []
[2022-05-14T12:05:24.902115+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:46.218121+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:05:46.219580+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:05:46.444994+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:46.445396+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:46.447112+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 47 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:46.462466+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:05:46.468683+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:46.472417+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:05:46.473181+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:05:46.473529+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:46.474874+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:46.475207+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:05:46.477947+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:46.478281+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:05:46.479084+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:46.479382+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:05:46.480763+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:05:46.481879+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:05:46.483140+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:05:46.486532+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:46.631282+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f3cf2"},"request_uri":"http://localhost/project-1/public/_wdt/3f3cf2","method":"GET"} []
[2022-05-14T12:05:46.635492+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:46.745413+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:05:46.932946+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f3cf2"},"request_uri":"http://localhost/project-1/public/_wdt/3f3cf2","method":"GET"} []
[2022-05-14T12:05:46.935063+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:48.134662+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:05:48.162760+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:05:48.366334+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:48.366758+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:48.368290+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 47 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:48.383553+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:05:48.388831+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:48.391963+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:05:48.392673+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:05:48.393027+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:48.394272+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:48.394600+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:05:48.397067+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:48.397511+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:05:48.398501+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:48.398927+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:05:48.400152+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:05:48.400939+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:05:48.401754+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:05:48.403631+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:48.462098+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d80921"},"request_uri":"http://localhost/project-1/public/_wdt/d80921","method":"GET"} []
[2022-05-14T12:05:48.464047+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:48.610532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d80921"},"request_uri":"http://localhost/project-1/public/_wdt/d80921","method":"GET"} []
[2022-05-14T12:05:48.612308+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:48.621046+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:05:49.006278+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d80921"},"request_uri":"http://localhost/project-1/public/_wdt/d80921","method":"GET"} []
[2022-05-14T12:05:49.007301+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:52.127771+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:05:52.129444+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:05:52.355766+02:00] php.CRITICAL: Uncaught Error: Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:52.356279+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:52.358009+02:00] request.CRITICAL: Uncaught PHP Exception TypeError: "Argument 2 passed to App\Repository\ExportMadeRepository::filterData() must be an instance of Symfony\Component\Validator\Constraints\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 47 {"exception":"[object] (TypeError(code: 0): Argument 2 passed to App\\Repository\\ExportMadeRepository::filterData() must be an instance of Symfony\\Component\\Validator\\Constraints\\DateTime or null, instance of DateTime given, called in /var/www/html/project-1/src/Controller/ReportController.php on line 36 at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:47)"} []
[2022-05-14T12:05:52.370444+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:05:52.375027+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:52.377518+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:05:52.378047+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:05:52.378266+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:05:52.379287+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:52.379511+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:05:52.381579+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:52.381795+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:05:52.382360+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:52.382559+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:05:52.383311+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:05:52.383739+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:05:52.384330+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:05:52.385886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:05:52.463436+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"065598"},"request_uri":"http://localhost/project-1/public/_wdt/065598","method":"GET"} []
[2022-05-14T12:05:52.464787+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:05:52.590372+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:05:52.653158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"065598"},"request_uri":"http://localhost/project-1/public/_wdt/065598","method":"GET"} []
[2022-05-14T12:05:52.654368+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:06:16.366964+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:06:16.368927+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:06:16.564820+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:06:16.571124+02:00] php.CRITICAL: Uncaught Error: Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:06:16.571591+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:06:16.573283+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php line 50 {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:06:16.610943+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:06:16.613629+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:06:16.614231+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:06:16.614530+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:06:16.615654+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:06:16.615945+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:06:16.618108+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:06:16.618406+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:06:16.619238+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:06:16.619577+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:06:16.620637+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:06:16.621446+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:06:16.622547+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:06:16.625228+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:06:16.737885+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"724492"},"request_uri":"http://localhost/project-1/public/_wdt/724492","method":"GET"} []
[2022-05-14T12:06:16.739796+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:06:16.892471+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"724492"},"request_uri":"http://localhost/project-1/public/_wdt/724492","method":"GET"} []
[2022-05-14T12:06:16.892909+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:06:16.894239+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:01.933732+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:07:01.936244+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:07:02.146861+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:07:02.151992+02:00] php.CRITICAL: Uncaught Error: Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:07:02.152395+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:02.153951+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php line 50 {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:07:02.189222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:07:02.191901+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:07:02.192488+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:07:02.192778+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:07:02.193910+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:02.194256+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:07:02.197174+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:02.197766+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:07:02.198764+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:02.199157+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:07:02.200366+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:07:02.201150+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:07:02.202091+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:07:02.203841+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:02.318602+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aec5f1"},"request_uri":"http://localhost/project-1/public/_wdt/aec5f1","method":"GET"} []
[2022-05-14T12:07:02.320198+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:02.459124+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:07:02.600420+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aec5f1"},"request_uri":"http://localhost/project-1/public/_wdt/aec5f1","method":"GET"} []
[2022-05-14T12:07:02.602105+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:37.115001+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:07:37.117169+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:07:37.327031+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:07:37.332587+02:00] php.CRITICAL: Uncaught Error: Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:07:37.333103+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:37.334872+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Object of class Symfony\Component\Validator\Constraints\DateTime could not be converted to string" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php line 50 {"exception":"[object] (Error(code: 0): Object of class Symfony\\Component\\Validator\\Constraints\\DateTime could not be converted to string at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:50)"} []
[2022-05-14T12:07:37.368977+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:07:37.371954+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:07:37.372633+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:07:37.372861+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:07:37.373909+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:37.374141+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:07:37.376239+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:37.376480+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:07:37.377064+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:37.377264+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:07:37.378058+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:07:37.378576+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:07:37.379219+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:07:37.380814+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:07:37.491786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fca31f"},"request_uri":"http://localhost/project-1/public/_wdt/fca31f","method":"GET"} []
[2022-05-14T12:07:37.494001+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:07:37.624237+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:07:37.771818+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fca31f"},"request_uri":"http://localhost/project-1/public/_wdt/fca31f","method":"GET"} []
[2022-05-14T12:07:37.773229+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:02.463732+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:08:02.465008+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:08:02.658165+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:08:02.663222+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:08:02.671654+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:02.674417+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:02.676693+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:08:02.677398+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:08:02.677623+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:02.678976+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:02.679329+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:08:02.682220+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:02.682552+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:08:02.683356+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:02.683651+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:08:02.684734+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:08:02.685474+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:08:02.686409+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:08:02.689000+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:02.737708+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:08:02.859851+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba817a"},"request_uri":"http://localhost/project-1/public/_wdt/ba817a","method":"GET"} []
[2022-05-14T12:08:02.861505+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:08.521919+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:08:08.524223+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:08:08.764067+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:08:08.771149+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:08:08.782385+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:08.786097+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:08.788720+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:08:08.789476+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:08:08.789832+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:08.791244+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:08.791631+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:08:08.794255+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:08.794625+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:08:08.795537+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:08.795863+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:08:08.796920+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:08:08.797648+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:08:08.798535+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:08:08.800496+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:08.856966+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:08:08.978618+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d8889"},"request_uri":"http://localhost/project-1/public/_wdt/5d8889","method":"GET"} []
[2022-05-14T12:08:08.980732+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:09.869860+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:08:09.871547+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:08:10.113324+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:08:10.119022+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:08:10.128543+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:10.131058+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:10.133945+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:08:10.135044+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:08:10.135598+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:08:10.137546+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:10.138168+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:08:10.141371+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:10.141782+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:08:10.142623+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:10.142940+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:08:10.143981+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:08:10.144617+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:08:10.145539+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:08:10.148206+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:08:10.214759+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:08:10.305131+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d49e7e"},"request_uri":"http://localhost/project-1/public/_wdt/d49e7e","method":"GET"} []
[2022-05-14T12:08:10.307243+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:08:12.850969+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"d49e7e"},"request_uri":"http://localhost/project-1/public/_profiler/d49e7e?panel=db","method":"GET"} []
[2022-05-14T12:08:12.852911+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:16.748474+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:09:16.749930+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:09:16.947403+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:09:16.952273+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:09:16.960586+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:16.962988+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:16.965270+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:09:16.965851+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:09:16.966134+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:16.967235+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:16.967534+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:09:16.969765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:16.970065+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:09:16.970731+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:16.971016+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:09:16.971874+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:09:16.972397+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:09:16.973082+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:09:16.974655+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:17.019100+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:09:17.138769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e06c7a"},"request_uri":"http://localhost/project-1/public/_wdt/e06c7a","method":"GET"} []
[2022-05-14T12:09:17.139856+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:17.808569+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:09:17.810145+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:09:18.012300+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:09:18.017004+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:09:18.025271+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:18.027409+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:18.029748+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:09:18.030368+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:09:18.030667+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:18.031758+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:18.032021+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:09:18.034126+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:18.034426+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:09:18.035102+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:18.035380+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:09:18.036235+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:09:18.036714+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:09:18.037457+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:09:18.039499+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:18.084542+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:09:18.156506+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1460ec"},"request_uri":"http://localhost/project-1/public/_wdt/1460ec","method":"GET"} []
[2022-05-14T12:09:18.157947+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:18.829894+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:09:18.831581+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:09:19.027114+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:09:19.031954+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:09:19.040054+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:19.042208+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:19.044533+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:09:19.045125+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:09:19.045416+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:19.046475+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:19.046793+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:09:19.048871+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:19.049163+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:09:19.049810+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:19.050073+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:09:19.050919+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:09:19.051424+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:09:19.052046+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:09:19.053777+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:19.098456+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:09:19.173818+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"59fef1"},"request_uri":"http://localhost/project-1/public/_wdt/59fef1","method":"GET"} []
[2022-05-14T12:09:19.174825+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:19.782972+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:09:19.784046+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:09:19.994998+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:09:19.999922+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:09:20.009029+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:20.011364+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:20.013758+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:09:20.014347+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:09:20.014638+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:20.015771+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:20.016048+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:09:20.018367+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:20.018828+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:09:20.019776+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:20.020222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:09:20.021443+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:09:20.022186+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:09:20.022959+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:09:20.024602+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:20.075242+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:09:20.131191+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a0af5"},"request_uri":"http://localhost/project-1/public/_wdt/3a0af5","method":"GET"} []
[2022-05-14T12:09:20.132538+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:49.238399+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:09:49.240409+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:09:49.436019+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:09:49.441762+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:09:49.450952+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:09:49.453541+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:49.456043+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:09:49.456911+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:09:49.457204+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:09:49.458676+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:49.459330+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:09:49.462533+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:49.463069+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:09:49.464281+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:49.464679+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:09:49.465806+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:09:49.466485+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:09:49.467797+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:09:49.471595+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:09:49.480712+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:37)" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php line 52 {"exception":"[object] (ErrorException(code: 0): Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:37) at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php:52)"} []
[2022-05-14T12:09:49.735355+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:10:42.695437+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:10:42.696411+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:10:42.708278+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:10:42.713194+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:10:42.724268+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:10:42.727630+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:10:42.730654+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:10:42.731415+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:10:42.731750+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:10:42.733126+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:10:42.733456+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:10:42.735960+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:10:42.736317+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:10:42.737042+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:10:42.737304+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:10:42.738214+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:10:42.738765+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:10:42.739490+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:10:42.741056+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:10:42.782604+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:10:42.911592+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d687ec"},"request_uri":"http://localhost/project-1/public/_wdt/d687ec","method":"GET"} []
[2022-05-14T12:10:42.914667+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:08.195419+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:08.196725+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:08.350245+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTimestamp() on null {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:11:08.350703+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:08.351999+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTimestamp() on null" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 53 {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:11:08.365950+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:08.370899+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:08.373719+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:08.374627+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:08.375430+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:08.378833+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:08.379390+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:08.382619+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:08.382949+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:08.383846+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:08.384162+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:08.385155+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:08.385749+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:08.386579+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:08.388853+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:08.554023+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fdba48"},"request_uri":"http://localhost/project-1/public/_wdt/fdba48","method":"GET"} []
[2022-05-14T12:11:08.557449+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:08.654621+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:08.954091+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fdba48"},"request_uri":"http://localhost/project-1/public/_wdt/fdba48","method":"GET"} []
[2022-05-14T12:11:08.958481+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:26.805028+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:26.806568+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:26.961199+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:26.966443+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:11:26.975980+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:26.978523+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:26.981282+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:26.981974+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:26.982308+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:26.983628+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:26.983954+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:26.986338+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:26.986660+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:26.987378+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:26.987681+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:26.988635+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:26.989200+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:26.989962+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:26.991728+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:26.995977+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:37)" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php line 52 {"exception":"[object] (ErrorException(code: 0): Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:37) at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php:52)"} []
[2022-05-14T12:11:27.247739+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:39.708836+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:11:39.710053+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:39.722282+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:39.727937+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:11:39.739885+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:39.742729+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:39.745625+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:39.746333+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:39.746667+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:39.747981+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:39.748319+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:39.750868+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:39.751210+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:39.751987+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:39.752303+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:39.753328+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:39.753937+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:39.754724+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:39.756494+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:39.804941+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:39.926750+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99c706"},"request_uri":"http://localhost/project-1/public/_wdt/99c706","method":"GET"} []
[2022-05-14T12:11:39.928544+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:40.955589+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:40.957263+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:41.118576+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:41.123237+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:11:41.130913+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:41.133038+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:41.136109+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:41.137063+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:41.137429+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:41.138856+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:41.139335+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:41.141883+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:41.142233+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:41.142965+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:41.143240+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:41.144092+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:41.144619+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:41.145286+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:41.146834+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:41.190209+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:41.255108+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4eae33"},"request_uri":"http://localhost/project-1/public/_wdt/4eae33","method":"GET"} []
[2022-05-14T12:11:41.256800+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:42.246307+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:42.247574+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:42.388842+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:42.393785+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:11:42.402124+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:42.405117+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:42.408014+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:42.408930+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:42.409284+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:42.410508+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:42.410831+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:42.412978+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:42.413269+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:42.413917+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:42.414186+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:42.415055+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:42.415572+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:42.416247+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:42.417911+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:42.461835+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:42.526523+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c71c46"},"request_uri":"http://localhost/project-1/public/_wdt/c71c46","method":"GET"} []
[2022-05-14T12:11:42.527974+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:43.067013+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:43.068524+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:43.219665+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:43.224446+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:11:43.232335+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:43.234475+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:43.237349+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:43.238362+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:43.238787+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:43.240267+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:43.240744+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:43.243296+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:43.243618+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:43.244302+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:43.244574+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:43.245436+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:43.245980+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:43.246700+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:43.248364+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:43.293884+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:43.356211+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a92ae4"},"request_uri":"http://localhost/project-1/public/_wdt/a92ae4","method":"GET"} []
[2022-05-14T12:11:43.358074+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:43.876372+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:11:43.877615+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:11:44.035464+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:11:44.040590+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:11:44.049147+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:11:44.051428+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:44.054681+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:11:44.055685+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:11:44.056062+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:11:44.057588+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:44.058132+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:11:44.060932+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:44.061297+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:11:44.062047+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:44.062344+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:11:44.063287+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:11:44.063851+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:11:44.064532+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:11:44.066233+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:11:44.116479+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:11:44.180978+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be27b3"},"request_uri":"http://localhost/project-1/public/_wdt/be27b3","method":"GET"} []
[2022-05-14T12:11:44.182382+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:12:03.102167+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"be27b3"},"request_uri":"http://localhost/project-1/public/_profiler/be27b3?panel=db","method":"GET"} []
[2022-05-14T12:12:03.104061+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:56.616936+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:13:56.618617+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:13:56.773766+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:13:56.779661+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:13:56.787777+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:56.790368+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:56.793484+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:13:56.794286+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:13:56.794610+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:56.795785+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:56.796033+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:13:56.798212+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:56.798532+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:13:56.799205+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:56.799482+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:13:56.800361+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:13:56.800888+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:13:56.801649+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:13:56.803391+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:56.851079+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:13:56.986477+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"841c6c"},"request_uri":"http://localhost/project-1/public/_wdt/841c6c","method":"GET"} []
[2022-05-14T12:13:56.988136+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:58.395562+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:13:58.396768+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:13:58.537530+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:13:58.542274+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:13:58.550537+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:58.552684+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:58.555156+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:13:58.555778+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:13:58.556051+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:58.557351+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:58.557814+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:13:58.560495+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:58.560890+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:13:58.561669+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:58.561950+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:13:58.562810+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:13:58.563316+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:13:58.564017+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:13:58.565559+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:58.608929+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:13:58.678329+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2cc027"},"request_uri":"http://localhost/project-1/public/_wdt/2cc027","method":"GET"} []
[2022-05-14T12:13:58.679998+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:59.458733+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:13:59.461702+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:13:59.619828+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:13:59.625194+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:13:59.634190+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:13:59.636624+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:59.639168+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:13:59.639864+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:13:59.640211+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:13:59.641659+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:59.642181+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:13:59.644981+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:59.645318+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:13:59.646026+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:59.646302+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:13:59.647252+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:13:59.647808+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:13:59.648506+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:13:59.650151+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:13:59.693663+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:13:59.763849+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"65e2e1"},"request_uri":"http://localhost/project-1/public/_wdt/65e2e1","method":"GET"} []
[2022-05-14T12:13:59.765097+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:14:00.372615+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:14:00.374007+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:14:00.516831+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:14:00.522013+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:14:00.530492+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:14:00.533011+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:14:00.535545+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:14:00.536211+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:14:00.536496+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:14:00.537611+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:14:00.537912+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:14:00.540261+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:14:00.540802+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:14:00.541934+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:14:00.542652+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:14:00.544166+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:14:00.544717+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:14:00.545354+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:14:00.546942+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:14:00.591669+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:14:00.666840+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48bd98"},"request_uri":"http://localhost/project-1/public/_wdt/48bd98","method":"GET"} []
[2022-05-14T12:14:00.668167+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:15:50.513693+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:15:50.514903+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:15:50.657372+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:15:50.662927+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:15:50.671356+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:15:50.673984+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:15:50.677324+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:15:50.678105+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:15:50.678448+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:15:50.679616+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:50.679913+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:15:50.682103+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:50.682404+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:15:50.683058+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:50.683318+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:15:50.684179+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:15:50.684693+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:15:50.685364+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:15:50.687010+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:50.737203+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:15:50.858291+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"93bf83"},"request_uri":"http://localhost/project-1/public/_wdt/93bf83","method":"GET"} []
[2022-05-14T12:15:50.861079+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:15:51.618960+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:15:51.620051+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:15:51.765692+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:15:51.770486+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:15:51.778208+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:15:51.780243+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:15:51.782716+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:15:51.783297+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:15:51.783582+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:15:51.784668+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:51.784973+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:15:51.787053+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:51.787402+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:15:51.788110+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:51.788392+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:15:51.789407+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:15:51.790044+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:15:51.791187+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:15:51.794016+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:15:51.845236+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:15:51.909436+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aed107"},"request_uri":"http://localhost/project-1/public/_wdt/aed107","method":"GET"} []
[2022-05-14T12:15:51.912896+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:15:54.220869+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"aed107"},"request_uri":"http://localhost/project-1/public/_profiler/aed107?panel=db","method":"GET"} []
[2022-05-14T12:15:54.222014+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:12.951936+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:16:12.952835+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:12.963847+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:12.968719+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:16:12.977292+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:12.979509+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:12.982006+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:12.982647+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:12.982931+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:12.984163+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:12.984533+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:12.987392+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:12.987789+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:12.988837+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:12.989155+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:12.990189+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:12.990723+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:12.991374+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:12.993051+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:13.033524+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:16:13.137969+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"398d99"},"request_uri":"http://localhost/project-1/public/_wdt/398d99","method":"GET"} []
[2022-05-14T12:16:13.139189+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:14.588371+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:16:14.589616+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:14.732717+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:14.737494+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:16:14.745580+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:14.747629+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:14.750137+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:14.750771+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:14.751076+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:14.752162+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:14.752471+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:14.754905+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:14.755327+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:14.756322+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:14.756787+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:14.757833+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:14.758418+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:14.759200+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:14.761728+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:14.812470+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:16:14.891066+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"89d70c"},"request_uri":"http://localhost/project-1/public/_wdt/89d70c","method":"GET"} []
[2022-05-14T12:16:14.893272+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:30.658989+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:16:30.660165+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:30.672333+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:30.678424+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:16:30.681547+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:30.682891+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:16:30.717842+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:16:30.718817+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:16:30.719175+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:16:30.794341+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:30.797438+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:30.798512+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:30.799022+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:30.800931+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:30.801490+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:30.804450+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:30.804849+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:30.805685+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:30.805993+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:30.807035+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:30.807840+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:30.808978+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:30.812032+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:31.125053+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:16:42.467318+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:16:42.468860+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:42.490343+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:42.500277+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:16:42.521701+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:42.527004+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:42.532446+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:42.538829+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:42.539350+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:42.542016+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:42.542692+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:42.547544+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:42.548091+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:42.549518+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:42.550030+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:42.552001+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:42.553317+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:42.554986+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:42.559278+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:42.668130+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:16:42.852703+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63d41a"},"request_uri":"http://localhost/project-1/public/_wdt/63d41a","method":"GET"} []
[2022-05-14T12:16:42.869574+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:44.677684+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:16:44.679606+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:44.958141+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:44.965861+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:16:44.976884+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:44.979752+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:44.983076+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:44.983881+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:44.984220+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:44.985684+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:44.986070+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:44.989265+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:44.989674+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:44.990618+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:44.990980+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:44.992125+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:44.992831+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:44.993948+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:44.996295+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:45.059008+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:16:45.139957+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"284e10"},"request_uri":"http://localhost/project-1/public/_wdt/284e10","method":"GET"} []
[2022-05-14T12:16:45.142026+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:50.015754+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:16:50.017701+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:16:50.300578+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:16:50.307069+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:16:50.318490+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:16:50.321910+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:50.325741+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:16:50.327131+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:16:50.327662+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:16:50.329617+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:50.330210+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:16:50.333440+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:50.333860+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:16:50.334781+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:50.335143+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:16:50.336312+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:16:50.337026+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:16:50.337954+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:16:50.340213+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:16:50.346386+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:45)" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php line 52 {"exception":"[object] (ErrorException(code: 0): Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:45) at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php:52)"} []
[2022-05-14T12:16:50.650709+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:17:27.222835+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:17:27.224234+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:17:27.391450+02:00] php.CRITICAL: Uncaught Error: Call to undefined method Doctrine\ORM\QueryBuilder::getResult() {"exception":"[object] (Error(code: 0): Call to undefined method Doctrine\\ORM\\QueryBuilder::getResult() at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:74)"} []
[2022-05-14T12:17:27.392213+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:17:27.393530+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "getResult" of class "Doctrine\ORM\QueryBuilder"." at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 74 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"getResult\" of class \"Doctrine\\ORM\\QueryBuilder\". at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:74)"} []
[2022-05-14T12:17:27.408755+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:17:27.414721+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:27.418053+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:17:27.418779+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:17:27.419108+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:27.420369+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:27.420703+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:17:27.423122+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:27.423477+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:17:27.424239+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:27.424575+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:17:27.425578+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:17:27.426154+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:17:27.426931+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:17:27.429272+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:27.519781+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7caf8e"},"request_uri":"http://localhost/project-1/public/_wdt/7caf8e","method":"GET"} []
[2022-05-14T12:17:27.521904+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:17:27.654007+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:17:27.733396+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7caf8e"},"request_uri":"http://localhost/project-1/public/_wdt/7caf8e","method":"GET"} []
[2022-05-14T12:17:27.734911+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:17:46.095941+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:17:46.098303+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:17:46.259251+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:17:46.265018+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:17:46.279636+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:17:46.283744+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:46.286280+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:17:46.286942+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:17:46.287284+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:46.288863+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:46.289570+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:17:46.292516+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:46.292909+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:17:46.293769+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:46.294089+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:17:46.295164+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:17:46.295995+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:17:46.297261+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:17:46.300146+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:46.304109+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:45)" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php line 52 {"exception":"[object] (ErrorException(code: 0): Warning: Cannot modify header information - headers already sent by (output started at /var/www/html/project-1/src/Controller/ReportController.php:45) at /var/www/html/project-1/vendor/symfony/http-foundation/Session/SessionUtils.php:52)"} []
[2022-05-14T12:17:46.570300+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:17:57.183592+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:17:57.185205+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:17:57.204128+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:17:57.209581+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:17:57.213436+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:17:57.215397+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:17:57.253582+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:17:57.254775+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:17:57.255170+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Controller/ReportController.php" at line 45." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Controller/ReportController.php\" at line 45. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:17:57.320024+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:57.322907+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:17:57.323610+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:17:57.323929+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:17:57.325192+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:57.325540+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:17:57.328201+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:57.328600+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:17:57.329619+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:57.330216+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:17:57.331846+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:17:57.332888+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:17:57.333972+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:17:57.336244+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:17:57.685802+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:04.047575+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:18:04.048612+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:18:04.060893+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:18:04.067339+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:18:04.079060+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:04.082296+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:04.087656+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:18:04.088892+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:18:04.089309+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:04.091284+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:04.091650+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:18:04.095265+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:04.095616+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:18:04.096613+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:04.096926+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:18:04.098411+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:18:04.099224+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:18:04.100137+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:18:04.102383+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:04.159959+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:04.261443+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b9f05"},"request_uri":"http://localhost/project-1/public/_wdt/6b9f05","method":"GET"} []
[2022-05-14T12:18:04.264690+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:06.436283+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:18:06.437433+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:18:06.450367+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:18:06.455740+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:18:06.464630+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:06.467171+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:06.470134+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:18:06.470856+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:18:06.471173+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:06.472391+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:06.472712+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:18:06.475016+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:06.475337+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:18:06.476063+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:06.476361+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:18:06.477286+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:18:06.477921+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:18:06.478853+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:18:06.481183+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:06.526803+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:06.600676+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"301779"},"request_uri":"http://localhost/project-1/public/_wdt/301779","method":"GET"} []
[2022-05-14T12:18:06.602042+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:07.764039+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:18:07.765399+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:18:07.910940+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:18:07.916473+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:18:07.926723+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:07.929454+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:07.933381+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:18:07.934158+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:18:07.934439+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:07.935968+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:07.936294+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:18:07.939427+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:07.939669+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:18:07.940485+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:07.940771+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:18:07.941904+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:18:07.942508+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:18:07.943228+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:18:07.944873+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:07.991078+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:08.049299+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d01037"},"request_uri":"http://localhost/project-1/public/_wdt/d01037","method":"GET"} []
[2022-05-14T12:18:08.050670+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:08.687787+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:18:08.689280+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:18:08.840768+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:18:08.845626+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_"} []
[2022-05-14T12:18:08.854614+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:08.856911+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:08.859484+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:18:08.860117+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:18:08.860434+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:08.861858+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:08.862296+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:18:08.865043+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:08.865472+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:18:08.866312+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:08.866627+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:18:08.867644+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:18:08.868497+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:18:08.869533+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:18:08.871987+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:08.922810+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:08.983452+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c073b"},"request_uri":"http://localhost/project-1/public/_wdt/8c073b","method":"GET"} []
[2022-05-14T12:18:08.984781+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:29.665428+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:18:29.667586+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:18:29.863827+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTimestamp() on null {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:18:29.864343+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:29.865881+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTimestamp() on null" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 53 {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:18:29.880685+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:18:29.887775+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:29.891838+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:18:29.893094+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:18:29.893550+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:18:29.895186+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:29.895621+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:18:29.898660+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:29.899053+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:18:29.899864+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:29.900196+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:18:29.901370+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:18:29.902062+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:18:29.903050+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:18:29.906106+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:18:30.066006+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71cabc"},"request_uri":"http://localhost/project-1/public/_wdt/71cabc","method":"GET"} []
[2022-05-14T12:18:30.067849+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:30.214050+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71cabc"},"request_uri":"http://localhost/project-1/public/_wdt/71cabc","method":"GET"} []
[2022-05-14T12:18:30.215198+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:18:30.238640+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:18:30.606801+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71cabc"},"request_uri":"http://localhost/project-1/public/_wdt/71cabc","method":"GET"} []
[2022-05-14T12:18:30.607906+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:21:52.359761+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:21:52.362345+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:21:52.557269+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTimestamp() on null {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:21:52.557677+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:21:52.558976+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTimestamp() on null" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 53 {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:53)"} []
[2022-05-14T12:21:52.571942+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:21:52.577972+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:21:52.582152+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:21:52.583180+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:21:52.583575+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:21:52.585586+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:21:52.586108+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:21:52.589559+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:21:52.589884+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:21:52.590712+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:21:52.590965+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:21:52.592180+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:21:52.592959+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:21:52.594079+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:21:52.596388+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:21:52.717771+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c84a2f"},"request_uri":"http://localhost/project-1/public/_wdt/c84a2f","method":"GET"} []
[2022-05-14T12:21:52.719715+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:21:52.811555+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:21:52.973105+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c84a2f"},"request_uri":"http://localhost/project-1/public/_wdt/c84a2f","method":"GET"} []
[2022-05-14T12:21:52.974457+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:25:20.285036+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:25:20.286357+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:25:20.439962+02:00] php.CRITICAL: Uncaught Error: Call to a member function getTimestamp() on null {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:57)"} []
[2022-05-14T12:25:20.440331+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:25:20.441769+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getTimestamp() on null" at /var/www/html/project-1/src/Repository/ExportMadeRepository.php line 57 {"exception":"[object] (Error(code: 0): Call to a member function getTimestamp() on null at /var/www/html/project-1/src/Repository/ExportMadeRepository.php:57)"} []
[2022-05-14T12:25:20.457257+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:25:20.463042+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:25:20.465894+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:25:20.466547+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:25:20.466868+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:25:20.468058+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:20.468405+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:25:20.471480+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:20.471969+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:25:20.473073+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:20.473521+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:25:20.474701+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:25:20.475420+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:25:20.476408+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:25:20.479122+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:20.612600+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b88c35"},"request_uri":"http://localhost/project-1/public/_wdt/b88c35","method":"GET"} []
[2022-05-14T12:25:20.614250+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:25:20.690627+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:25:20.843499+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b88c35"},"request_uri":"http://localhost/project-1/public/_wdt/b88c35","method":"GET"} []
[2022-05-14T12:25:20.844959+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:25:58.710062+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:25:58.711919+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:25:58.876829+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:25:58.882446+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:25:58.892185+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:25:58.895167+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:25:58.897685+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:25:58.898691+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:25:58.899165+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:25:58.900479+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:58.900826+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:25:58.903198+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:58.903571+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:25:58.904365+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:58.904634+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:25:58.905637+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:25:58.906291+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:25:58.907102+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:25:58.909013+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:25:58.959501+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:25:59.084259+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bfbf9"},"request_uri":"http://localhost/project-1/public/_wdt/0bfbf9","method":"GET"} []
[2022-05-14T12:25:59.086326+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:01.070288+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:01.072413+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:01.220711+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:01.225554+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:26:01.234678+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:01.237001+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:01.239576+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:01.240467+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:01.240856+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:01.242219+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:01.242569+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:01.244790+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:01.245048+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:01.246146+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:01.246424+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:01.247282+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:01.247819+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:01.248628+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:01.250759+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:01.295624+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:01.370974+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5592e7"},"request_uri":"http://localhost/project-1/public/_wdt/5592e7","method":"GET"} []
[2022-05-14T12:26:01.373192+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:01.966613+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:01.968107+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:02.119780+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:02.124643+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:26:02.133105+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:02.135628+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:02.138064+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:02.138907+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:02.139299+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:02.140772+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:02.141236+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:02.143634+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:02.143942+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:02.144683+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:02.144951+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:02.145867+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:02.146420+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:02.147153+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:02.148775+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:02.193626+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:02.257687+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6fff4d"},"request_uri":"http://localhost/project-1/public/_wdt/6fff4d","method":"GET"} []
[2022-05-14T12:26:02.258996+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:05.859262+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:05.860590+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:06.007705+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:06.012590+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:26:06.021896+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:06.024641+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:06.027059+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:06.027700+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:06.027975+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:06.029139+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:06.029457+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:06.031567+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:06.031834+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:06.032481+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:06.032756+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:06.033698+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:06.034236+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:06.034923+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:06.036568+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:06.080712+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:06.140834+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47694e"},"request_uri":"http://localhost/project-1/public/_wdt/47694e","method":"GET"} []
[2022-05-14T12:26:06.142464+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:19.529744+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:19.531710+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:19.724682+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:19.729633+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"1970-01-01 00:00:00","2":"2022-02-02 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"1970-01-01 00:00:00","2":"2022-02-02 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:26:19.737701+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:19.740091+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:19.742359+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:19.742962+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:19.743265+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:19.744434+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:19.744744+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:19.746925+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:19.747219+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:19.747891+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:19.748160+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:19.748999+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:19.749491+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:19.750172+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:19.751773+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:19.797191+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:19.939743+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca02d8"},"request_uri":"http://localhost/project-1/public/_wdt/ca02d8","method":"GET"} []
[2022-05-14T12:26:19.940817+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:22.943557+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:22.945204+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:23.133018+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:23.138087+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"1970-01-01 00:00:00","2":"2022-02-11 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"1970-01-01 00:00:00","2":"2022-02-11 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:26:23.147512+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:23.149881+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:23.152230+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:23.152845+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:23.153142+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:23.154401+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:23.154767+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:23.157337+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:23.157673+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:23.158391+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:23.158679+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:23.159541+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:23.160106+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:23.161181+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:23.164237+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:23.220731+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:23.282280+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"86748a"},"request_uri":"http://localhost/project-1/public/_wdt/86748a","method":"GET"} []
[2022-05-14T12:26:23.283670+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:28.031836+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:28.033140+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:28.214682+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:28.219918+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"1970-01-01 00:00:00","2":"2022-02-14 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"1970-01-01 00:00:00","2":"2022-02-14 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:26:28.228970+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:28.231365+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:28.233705+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:28.234320+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:28.234598+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:28.235765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:28.236034+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:28.238227+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:28.238525+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:28.239196+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:28.239482+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:28.240345+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:28.240879+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:28.241580+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:28.243200+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:28.290072+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:28.356774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5ab4e0"},"request_uri":"http://localhost/project-1/public/_wdt/5ab4e0","method":"GET"} []
[2022-05-14T12:26:28.358637+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:31.572612+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:31.573982+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:31.754713+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:31.759641+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"1970-01-01 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"1970-01-01 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:26:31.768797+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:31.771686+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:31.774260+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:31.775163+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:31.775560+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:31.776889+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:31.777225+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:31.779477+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:31.779772+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:31.780456+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:31.780731+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:31.781559+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:31.782049+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:31.782734+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:31.784442+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:31.829925+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:31.910662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"60a5dd"},"request_uri":"http://localhost/project-1/public/_wdt/60a5dd","method":"GET"} []
[2022-05-14T12:26:31.912758+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:52.648243+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:26:52.649723+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:26:52.841644+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:26:52.847259+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:26:52.856107+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:26:52.859000+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:52.861878+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:26:52.862767+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:26:52.863187+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:26:52.864584+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:52.864930+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:26:52.867133+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:52.867444+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:26:52.868106+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:52.868391+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:26:52.869236+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:26:52.869759+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:26:52.870456+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:26:52.872210+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:26:52.919377+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:26:53.027644+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"592f6a"},"request_uri":"http://localhost/project-1/public/_wdt/592f6a","method":"GET"} []
[2022-05-14T12:26:53.029044+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:10.228554+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:28:10.230433+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:28:10.433223+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:28:10.438379+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:28:10.451693+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:10.453115+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "Variable "form" does not exist." at /var/www/html/project-1/templates/report/index.html.twig line 12 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): Variable \"form\" does not exist. at /var/www/html/project-1/templates/report/index.html.twig:12)"} []
[2022-05-14T12:28:10.481487+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:10.483855+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:28:10.484463+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:28:10.484760+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:10.485977+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:10.486363+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:28:10.488924+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:10.489417+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:28:10.490708+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:10.491179+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:28:10.492567+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:28:10.493407+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:28:10.494378+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:28:10.496273+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:10.621131+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aeac54"},"request_uri":"http://localhost/project-1/public/_wdt/aeac54","method":"GET"} []
[2022-05-14T12:28:10.622934+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:10.782416+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aeac54"},"request_uri":"http://localhost/project-1/public/_wdt/aeac54","method":"GET"} []
[2022-05-14T12:28:10.783239+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:10.787575+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:28:19.752527+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:28:19.753975+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:28:20.032057+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:28:20.038316+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-12 00:00:00","2":"2022-02-16 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:28:20.058583+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:20.062440+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:20.066004+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:28:20.067068+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:28:20.067546+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:20.069172+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:20.069595+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:28:20.072728+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:20.073213+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:28:20.074332+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:20.074743+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:28:20.075987+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:28:20.076760+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:28:20.077698+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:28:20.079950+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:20.141576+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:28:20.344328+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"836fc5"},"request_uri":"http://localhost/project-1/public/_wdt/836fc5","method":"GET"} []
[2022-05-14T12:28:20.347940+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:22.640077+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:28:22.641347+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:28:22.654558+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:28:22.659315+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:28:22.668055+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:22.670206+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:22.672660+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:28:22.673257+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:28:22.673553+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:22.674644+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:22.674942+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:28:22.677076+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:22.677371+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:28:22.678140+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:22.678501+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:28:22.679616+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:28:22.680421+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:28:22.681389+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:28:22.683049+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:22.723797+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:28:22.796512+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1be98c"},"request_uri":"http://localhost/project-1/public/_wdt/1be98c","method":"GET"} []
[2022-05-14T12:28:22.797729+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:27.258507+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:28:27.259435+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:28:27.270068+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:28:27.274868+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:28:27.284802+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:28:27.286954+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:27.289459+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:28:27.290194+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:28:27.290576+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:28:27.292069+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:27.292563+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:28:27.295134+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:27.295482+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:28:27.296199+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:27.296473+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:28:27.297346+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:28:27.297873+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:28:27.298560+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:28:27.300057+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:28:27.340043+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:28:27.398294+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7adfda"},"request_uri":"http://localhost/project-1/public/_wdt/7adfda","method":"GET"} []
[2022-05-14T12:28:27.399575+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:21.738647+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:29:21.740072+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:29:21.761713+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:29:21.769774+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:29:21.804830+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:21.810831+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:21.815203+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:29:21.816331+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:29:21.817016+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:21.819803+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:21.820876+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:29:21.828627+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:21.829661+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:29:21.831097+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:21.831600+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:29:21.833202+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:29:21.834255+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:29:21.835350+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:29:21.837596+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:21.907161+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:29:22.065322+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"047e56"},"request_uri":"http://localhost/project-1/public/_wdt/047e56","method":"GET"} []
[2022-05-14T12:29:22.067375+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:24.330434+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:24.334786+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:29:24.378151+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:29:24.384483+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:24.387874+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:29:24.388798+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:29:24.389208+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:24.391232+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:24.391770+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:29:24.396489+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:24.396830+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:29:24.397905+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:24.398214+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:29:24.399499+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:29:24.400339+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:29:24.401214+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:29:24.402832+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:24.674906+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:29:26.092637+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:29:26.093687+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:29:26.104948+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:29:26.109719+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:29:26.118513+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:26.120587+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:26.123032+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:29:26.123669+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:29:26.123970+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:26.125187+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.125486+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:29:26.128198+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.128522+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:29:26.129423+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.129877+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:29:26.130990+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:29:26.131835+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:29:26.132995+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:29:26.135015+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.185680+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:29:26.367462+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:26.371490+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:29:26.434504+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:29:26.444129+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:26.450569+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:29:26.452068+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:29:26.452550+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:29:26.456884+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.460553+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:29:26.467265+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.467854+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:29:26.469299+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.469741+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:29:26.472205+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:29:26.473628+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:29:26.475119+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:29:26.478565+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:29:26.508412+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f9d2d"},"request_uri":"http://localhost/project-1/public/_wdt/9f9d2d","method":"GET"} []
[2022-05-14T12:29:26.512363+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:29:26.822351+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:28.753317+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:38:28.754735+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:38:28.765994+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:28.771030+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:38:28.787106+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:28.790155+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:28.792709+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:28.793328+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:28.793596+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:28.794724+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:28.794961+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:28.797119+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:28.797351+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:28.797940+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:28.798143+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:28.798940+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:28.799389+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:28.800044+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:28.801613+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:28.847800+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:29.033765+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:29.034623+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee0938"},"request_uri":"http://localhost/project-1/public/_wdt/ee0938","method":"GET"} []
[2022-05-14T12:38:29.035548+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:29.037298+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:38:29.092062+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:29.099292+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:29.102557+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:29.103763+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:29.104417+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:29.106656+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:29.107184+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:29.110014+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:29.110378+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:29.111375+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:29.111735+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:29.112909+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:29.113802+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:29.115046+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:29.116722+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:29.368834+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:31.149711+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:38:31.151064+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:38:31.166977+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:31.174762+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:38:31.196037+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:31.200801+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:31.205705+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:31.206966+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:31.207595+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:31.209871+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.210334+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:31.214514+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.214919+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:31.215752+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.216058+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:31.217139+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:31.218191+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:31.219464+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:31.221940+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.270145+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:31.424683+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:31.427991+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:38:31.469012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e26c3"},"request_uri":"http://localhost/project-1/public/_wdt/9e26c3","method":"GET"} []
[2022-05-14T12:38:31.471374+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:31.497177+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:31.507384+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:31.512098+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:31.513446+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:31.514156+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:31.517032+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.517647+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:31.525239+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.525678+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:31.526936+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.527321+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:31.529033+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:31.530005+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:31.531038+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:31.532904+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:31.833298+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:32.904119+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:38:32.906069+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:38:33.218565+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:33.224598+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:38:33.239727+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:33.243510+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:33.246376+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:33.247197+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:33.247579+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:33.249462+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.249888+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:33.253358+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.254013+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:33.255465+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.255959+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:33.257932+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:33.259388+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:33.260372+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:33.262424+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.325059+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:38:33.531347+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:33.539348+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:38:33.601102+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50846b"},"request_uri":"http://localhost/project-1/public/_wdt/50846b","method":"GET"} []
[2022-05-14T12:38:33.603252+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:38:33.667406+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:38:33.676443+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:33.682725+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:38:33.684080+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:38:33.684624+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:38:33.689801+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.690453+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:38:33.695404+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.695966+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:38:33.697476+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:33.697988+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:38:33.700711+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:38:33.701884+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:38:33.704078+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:38:33.708269+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:38:34.134199+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:19.831831+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:39:19.833349+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:39:20.056724+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:20.061567+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:39:20.067232+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:20.069910+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:20.072916+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:20.073850+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:20.074272+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:20.075907+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.076271+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:20.078779+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.079153+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:20.079866+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.080171+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:20.081055+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:20.081591+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:20.082293+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:20.083957+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.133042+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:20.297918+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:20.301522+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:39:20.324629+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba2ea3"},"request_uri":"http://localhost/project-1/public/_wdt/ba2ea3","method":"GET"} []
[2022-05-14T12:39:20.326306+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:20.361772+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:20.370264+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:20.374390+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:20.375616+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:20.376124+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:20.378227+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.378618+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:20.381143+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.381429+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:20.382136+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.382362+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:20.383194+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:20.383687+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:20.384359+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:20.385837+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:20.652639+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:25.180222+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:39:25.182371+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:39:25.339265+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:25.344496+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:39:25.351431+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:25.353846+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:25.356235+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:25.356890+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:25.357192+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:25.358401+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.358723+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:25.360958+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.361258+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:25.361943+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.362223+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:25.363146+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:25.363650+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:25.364315+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:25.366269+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.407975+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:25.537472+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:25.541351+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:39:25.566411+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dbcd4"},"request_uri":"http://localhost/project-1/public/_wdt/4dbcd4","method":"GET"} []
[2022-05-14T12:39:25.569322+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:25.603432+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:25.610905+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:25.615686+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:25.616650+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:25.616995+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:25.618888+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.619207+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:25.622274+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.622596+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:25.623422+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.623688+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:25.624789+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:25.625446+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:25.626358+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:25.629170+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:25.921750+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:26.571233+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:39:26.572476+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:39:26.712227+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:26.717206+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:39:26.723524+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:26.725623+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:26.727916+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:26.728523+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:26.728831+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:26.729952+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:26.730258+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:26.732589+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:26.732972+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:26.733857+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:26.734311+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:26.735593+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:26.736323+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:26.737288+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:26.740165+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:26.808846+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:26.943537+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:26.946513+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:39:26.970307+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"12f477"},"request_uri":"http://localhost/project-1/public/_wdt/12f477","method":"GET"} []
[2022-05-14T12:39:26.976351+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:27.011484+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:27.017806+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:27.020763+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:27.021641+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:27.022008+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:27.023841+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:27.024483+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:27.028459+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:27.029046+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:27.030340+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:27.030683+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:27.032126+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:27.033045+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:27.033967+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:27.035590+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:27.284418+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:41.131316+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:39:41.133112+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:39:41.341620+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:41.346577+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:39:41.352815+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:41.355120+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:41.357589+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:41.358394+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:41.358817+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:41.360505+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.361021+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:41.363892+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.364381+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:41.365250+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.365541+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:41.366413+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:41.366944+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:41.367622+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:41.369218+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.410329+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:39:41.547618+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:41.550038+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T12:39:41.578719+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bf924"},"request_uri":"http://localhost/project-1/public/_wdt/4bf924","method":"GET"} []
[2022-05-14T12:39:41.580594+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:39:41.607821+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:39:41.614833+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:41.619421+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:39:41.625993+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:39:41.626612+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:39:41.629241+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.629827+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:39:41.633988+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.634390+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:39:41.635619+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.636627+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:39:41.639595+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:39:41.640602+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:39:41.641867+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:39:41.643640+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:39:41.893490+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:15.039895+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:40:15.041918+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:15.245682+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:15.250781+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:40:15.263415+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:15.265770+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:15.268154+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:15.268789+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:15.269095+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:15.270241+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:15.270555+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:15.272765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:15.273066+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:15.273739+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:15.274014+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:15.274876+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:15.275396+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:15.276146+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:15.278234+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:15.319861+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:15.438613+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"155107"},"request_uri":"http://localhost/project-1/public/_wdt/155107","method":"GET"} []
[2022-05-14T12:40:15.441221+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:27.717087+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:40:27.718664+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:27.961463+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:27.967499+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-11 00:00:00","2":"2022-02-14 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T12:40:27.986783+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:27.991390+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:27.994439+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:27.995198+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:27.995528+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:27.997123+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:27.997501+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:28.000347+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:28.000731+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:28.001569+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:28.001872+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:28.002900+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:28.003509+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:28.004424+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:28.007022+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:28.074063+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:28.200490+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2de116"},"request_uri":"http://localhost/project-1/public/_wdt/2de116","method":"GET"} []
[2022-05-14T12:40:28.202382+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:29.464994+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:29.465793+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:29.473231+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:29.478307+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:29.484940+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:29.487004+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:29.489502+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:29.490127+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:29.490422+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:29.491515+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:29.491819+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:29.493988+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:29.494293+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:29.494963+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:29.495239+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:29.496082+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:29.496591+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:29.497253+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:29.498767+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:29.537270+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:29.599978+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"981a8f"},"request_uri":"http://localhost/project-1/public/_wdt/981a8f","method":"GET"} []
[2022-05-14T12:40:29.601743+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:37.564205+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:37.565265+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:37.577002+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:37.582605+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:37.602812+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:37.606450+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:37.609338+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:37.610384+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:37.610870+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:37.612706+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:37.613166+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:37.615755+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:37.616147+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:37.616881+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:37.617188+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:37.618185+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:37.618773+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:37.619573+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:37.621515+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:37.666243+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:37.746617+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d36f27"},"request_uri":"http://localhost/project-1/public/_wdt/d36f27","method":"GET"} []
[2022-05-14T12:40:37.748805+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:39.214293+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:39.215067+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:39.223654+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:39.231323+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:39.240664+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:39.244818+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:39.249771+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:39.250722+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:39.251034+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:39.253034+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:39.253431+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:39.257305+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:39.257648+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:39.258718+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:39.259007+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:39.260491+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:39.261290+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:39.262187+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:39.264044+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:39.311921+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:39.495354+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f9b18"},"request_uri":"http://localhost/project-1/public/_wdt/7f9b18","method":"GET"} []
[2022-05-14T12:40:39.497291+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:40.129860+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:40.130787+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:40.139914+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:40.144908+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:40.151750+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:40.153999+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:40.156694+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:40.157523+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:40.157888+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:40.159521+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:40.160206+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:40.162888+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:40.163281+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:40.164109+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:40.164434+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:40.165432+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:40.166052+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:40.166921+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:40.168623+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:40.212384+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:40.277756+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33e3a5"},"request_uri":"http://localhost/project-1/public/_wdt/33e3a5","method":"GET"} []
[2022-05-14T12:40:40.279314+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:47.729505+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:47.730747+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:47.745113+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:47.750067+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:47.763645+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:47.766454+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:47.769087+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:47.769780+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:47.770097+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:47.771684+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:47.772143+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:47.774993+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:47.775471+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:47.776350+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:47.776657+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:47.777785+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:47.778439+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:47.779252+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:47.781503+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:47.824725+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:47.950896+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7e8bb"},"request_uri":"http://localhost/project-1/public/_wdt/c7e8bb","method":"GET"} []
[2022-05-14T12:40:47.958041+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:48.661951+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:40:48.663392+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:40:48.678852+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:40:48.686263+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:40:48.701702+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:40:48.706495+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:48.711031+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:40:48.712541+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:40:48.713148+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:40:48.715282+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:48.716032+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:40:48.721046+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:48.721648+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:40:48.723471+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:48.724357+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:40:48.726254+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:40:48.727172+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:40:48.728454+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:40:48.731555+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:40:48.788848+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:40:48.880468+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"94e682"},"request_uri":"http://localhost/project-1/public/_wdt/94e682","method":"GET"} []
[2022-05-14T12:40:48.882584+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:08.599048+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:08.600242+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:08.612558+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:08.617663+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:08.630051+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:08.632306+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:08.634773+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:08.635352+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:08.635655+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:08.636808+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:08.637117+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:08.639236+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:08.639530+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:08.640432+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:08.640761+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:08.641977+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:08.642783+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:08.643857+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:08.645976+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:08.683219+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:08.809333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82b540"},"request_uri":"http://localhost/project-1/public/_wdt/82b540","method":"GET"} []
[2022-05-14T12:41:08.810754+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:09.764098+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:09.764842+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:09.772495+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:09.778239+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:09.785642+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:09.787991+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:09.791423+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:09.792662+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:09.793183+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:09.795194+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:09.795796+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:09.798973+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:09.799435+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:09.800341+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:09.800682+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:09.801787+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:09.802499+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:09.803478+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:09.805461+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:09.849162+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:09.918330+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b09e27"},"request_uri":"http://localhost/project-1/public/_wdt/b09e27","method":"GET"} []
[2022-05-14T12:41:09.920140+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:10.483844+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:10.484506+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:10.492735+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:10.497654+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:10.504711+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:10.506795+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:10.509739+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:10.510782+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:10.511201+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:10.512703+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:10.513184+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:10.515766+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:10.516139+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:10.516845+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:10.517131+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:10.518030+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:10.518575+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:10.519263+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:10.520840+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:10.561690+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:10.630725+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74712b"},"request_uri":"http://localhost/project-1/public/_wdt/74712b","method":"GET"} []
[2022-05-14T12:41:10.632480+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:11.086166+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:11.087330+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:11.100621+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:11.105787+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:11.113633+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:11.116251+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:11.118921+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:11.119618+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:11.119893+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:11.121065+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:11.121397+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:11.123678+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:11.123967+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:11.124703+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:11.124995+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:11.125914+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:11.126465+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:11.127205+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:11.128822+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:11.169229+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:11.232451+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afbd9a"},"request_uri":"http://localhost/project-1/public/_wdt/afbd9a","method":"GET"} []
[2022-05-14T12:41:11.234021+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:32.832718+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:32.834016+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:32.846985+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:32.853451+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:32.867367+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:32.871610+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:32.875296+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:32.876883+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:32.877561+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:32.879623+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:32.880033+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:32.882789+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:32.883104+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:32.883964+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:32.884327+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:32.885406+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:32.886115+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:32.887160+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:32.889715+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:32.942984+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:33.083251+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ef64bd"},"request_uri":"http://localhost/project-1/public/_wdt/ef64bd","method":"GET"} []
[2022-05-14T12:41:33.084648+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:34.496510+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:41:34.497343+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:41:34.504644+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:41:34.509927+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:41:34.515964+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:41:34.517963+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:34.520459+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:41:34.521094+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:41:34.521394+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:41:34.522472+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:34.522800+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:41:34.524957+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:34.525258+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:41:34.525914+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:34.526199+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:41:34.527056+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:41:34.527558+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:41:34.528239+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:41:34.529732+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:41:34.567335+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:41:34.621717+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab2dc8"},"request_uri":"http://localhost/project-1/public/_wdt/ab2dc8","method":"GET"} []
[2022-05-14T12:41:34.622841+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:07.936946+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:42:07.937848+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:42:07.952701+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:42:07.959006+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:42:07.972926+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:07.975394+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:07.978041+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:42:07.978883+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:42:07.979178+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:07.980406+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:07.980730+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:42:07.983040+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:07.983364+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:42:07.984103+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:07.984405+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:42:07.985309+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:42:07.985860+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:42:07.986583+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:42:07.988241+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:08.026630+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:42:08.153880+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6186ee"},"request_uri":"http://localhost/project-1/public/_wdt/6186ee","method":"GET"} []
[2022-05-14T12:42:08.155026+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:16.919450+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:42:16.920823+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:42:16.932323+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:42:16.938051+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:42:16.961475+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:16.965508+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:16.968427+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:42:16.969203+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:42:16.969570+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:16.971034+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:16.971491+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:42:16.974311+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:16.974715+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:42:16.975541+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:16.975883+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:42:16.976881+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:42:16.977513+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:42:16.978446+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:42:16.980901+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:17.024672+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:42:17.116427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc549c"},"request_uri":"http://localhost/project-1/public/_wdt/fc549c","method":"GET"} []
[2022-05-14T12:42:17.118530+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:17.846827+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:42:17.848171+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:42:17.879120+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:42:17.888923+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:42:17.900588+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:17.903954+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:17.908870+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:42:17.909949+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:42:17.910496+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:17.913180+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:17.913803+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:42:17.921975+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:17.923560+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:42:17.925135+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:17.925714+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:42:17.927723+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:42:17.928635+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:42:17.929817+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:42:17.932886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:17.996931+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:42:18.103794+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe30c2"},"request_uri":"http://localhost/project-1/public/_wdt/fe30c2","method":"GET"} []
[2022-05-14T12:42:18.105925+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:25.354860+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:42:25.356279+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:42:25.369155+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:42:25.374204+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:42:25.388549+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:25.391512+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:25.394805+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:42:25.395706+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:42:25.396031+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:25.397373+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:25.397723+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:42:25.400289+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:25.400682+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:42:25.401556+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:25.401856+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:42:25.403144+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:42:25.404063+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:42:25.404994+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:42:25.406802+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:25.450101+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:42:25.534986+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cbf2ba"},"request_uri":"http://localhost/project-1/public/_wdt/cbf2ba","method":"GET"} []
[2022-05-14T12:42:25.536903+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:29.611520+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:42:29.613129+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:42:29.757433+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:42:29.762089+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:42:29.800913+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:42:29.805989+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:29.809777+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:42:29.810937+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:42:29.811414+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:42:29.813203+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:29.813637+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:42:29.816878+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:29.817278+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:42:29.818731+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:29.819193+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:42:29.820778+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:42:29.821538+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:42:29.822487+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:42:29.824835+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:42:29.876625+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:42:29.957425+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bd3b6"},"request_uri":"http://localhost/project-1/public/_wdt/0bd3b6","method":"GET"} []
[2022-05-14T12:42:29.958858+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:10.696419+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:44:10.697302+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:44:10.703822+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:10.705114+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException: "An error has occurred resolving the options of the form "App\Form\ReportType": The option "test" does not exist. Defined options are: "action", "allow_extra_fields", "allow_file_upload", "attr", "attr_translation_parameters", "auto_initialize", "block_name", "block_prefix", "by_reference", "compound", "constraints", "csrf_field_name", "csrf_message", "csrf_protection", "csrf_token_id", "csrf_token_manager", "data", "data_class", "disabled", "empty_data", "error_bubbling", "error_mapping", "extra_fields_message", "form_attr", "getter", "help", "help_attr", "help_html", "help_translation_parameters", "inherit_data", "invalid_message", "invalid_message_parameters", "is_empty_callback", "label", "label_attr", "label_format", "label_html", "label_translation_parameters", "legacy_error_messages", "mapped", "method", "post_max_size_message", "priority", "property_path", "required", "row_attr", "setter", "translation_domain", "trim", "upload_max_size_message", "validation_groups"." at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php line 102 {"exception":"[object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): An error has occurred resolving the options of the form \"App\\Form\\ReportType\": The option \"test\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php:102)\n[previous exception] [object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): The option \"test\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/options-resolver/OptionsResolver.php:899)"} []
[2022-05-14T12:44:10.735249+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:44:10.740515+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:10.743479+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:44:10.744259+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:44:10.744640+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:10.746015+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:10.746364+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:44:10.748847+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:10.749158+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:44:10.749836+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:10.750118+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:44:10.750989+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:44:10.751526+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:44:10.752365+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:44:10.754785+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:10.887956+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a3e51"},"request_uri":"http://localhost/project-1/public/_wdt/4a3e51","method":"GET"} []
[2022-05-14T12:44:10.890034+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:11.101259+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a3e51"},"request_uri":"http://localhost/project-1/public/_wdt/4a3e51","method":"GET"} []
[2022-05-14T12:44:11.102216+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:11.170374+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:44:11.490546+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a3e51"},"request_uri":"http://localhost/project-1/public/_wdt/4a3e51","method":"GET"} []
[2022-05-14T12:44:11.491705+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:48.882021+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:44:48.883124+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:44:48.893461+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:44:48.900374+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:44:48.901768+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:44:48.904398+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:48.905889+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:44:48.948229+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:44:48.949255+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:44:48.949726+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:44:49.004947+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:49.008516+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:44:49.009230+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:44:49.009501+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:49.010988+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:49.011276+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:44:49.014641+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:49.015209+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:44:49.016542+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:49.016939+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:44:49.018484+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:44:49.019411+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:44:49.020400+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:44:49.022096+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:49.326813+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:44:55.049470+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:44:55.050854+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:44:55.066416+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:44:55.072752+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:44:55.074411+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:44:55.085203+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:44:55.089423+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:55.092977+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:44:55.094083+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:44:55.094566+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:44:55.096414+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:55.096961+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:44:55.100153+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:55.100637+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:44:55.101790+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:55.102355+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:44:55.103750+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:44:55.104461+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:44:55.105309+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:44:55.107226+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:44:55.154745+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:44:55.261951+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be4884"},"request_uri":"http://localhost/project-1/public/_wdt/be4884","method":"GET"} []
[2022-05-14T12:44:55.263850+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:05.101189+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:49:05.102478+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:49:05.114587+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:49:05.121305+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:05.122843+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:05.131254+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:05.135409+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:05.140151+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:49:05.141317+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:49:05.141693+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:05.143517+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:05.144139+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:49:05.146991+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:05.147302+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:49:05.148108+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:05.148390+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:49:05.149609+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:49:05.150408+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:49:05.151608+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:49:05.154065+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:05.198849+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:49:05.339779+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29bd75"},"request_uri":"http://localhost/project-1/public/_wdt/29bd75","method":"GET"} []
[2022-05-14T12:49:05.340753+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:06.003683+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:49:06.004601+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:49:06.011868+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:49:06.016836+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:06.017957+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:06.023450+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:06.025482+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:06.027973+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:49:06.028617+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:49:06.028916+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:06.030122+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:06.030564+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:49:06.032952+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:06.033222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:49:06.034032+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:06.034548+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:49:06.035880+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:49:06.036780+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:49:06.037704+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:49:06.039692+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:06.082931+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:49:06.152690+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc6762"},"request_uri":"http://localhost/project-1/public/_wdt/dc6762","method":"GET"} []
[2022-05-14T12:49:06.154453+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:07.942884+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:49:07.944241+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:49:07.953193+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:49:07.958603+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:08.108279+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:49:08.114821+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:08.117454+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:08.119956+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:49:08.120618+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:49:08.120921+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:08.122031+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:08.122336+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:49:08.124588+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:08.124913+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:49:08.125849+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:08.126290+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:49:08.127608+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:49:08.128349+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:49:08.129077+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:49:08.130724+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:08.172065+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:49:08.238534+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5a526"},"request_uri":"http://localhost/project-1/public/_wdt/d5a526","method":"GET"} []
[2022-05-14T12:49:08.240293+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:08.851691+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:49:08.852989+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:49:08.861902+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:49:08.867019+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:49:09.004800+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T12:49:09.011167+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:49:09.013507+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:09.015965+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:49:09.016817+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:49:09.017191+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:49:09.018558+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:09.018931+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:49:09.021248+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:09.021526+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:49:09.022118+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:09.022313+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:49:09.023073+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:49:09.023501+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:49:09.024096+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:49:09.025728+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:49:09.066743+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:49:09.128308+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff6d7d"},"request_uri":"http://localhost/project-1/public/_wdt/ff6d7d","method":"GET"} []
[2022-05-14T12:49:09.129945+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:40.752213+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:57:40.753463+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:57:40.760095+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:40.761927+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException: "An error has occurred resolving the options of the form "App\Form\ReportType": The option "xx" does not exist. Defined options are: "action", "allow_extra_fields", "allow_file_upload", "attr", "attr_translation_parameters", "auto_initialize", "block_name", "block_prefix", "by_reference", "compound", "constraints", "csrf_field_name", "csrf_message", "csrf_protection", "csrf_token_id", "csrf_token_manager", "data", "data_class", "disabled", "empty_data", "error_bubbling", "error_mapping", "extra_fields_message", "form_attr", "getter", "help", "help_attr", "help_html", "help_translation_parameters", "inherit_data", "invalid_message", "invalid_message_parameters", "is_empty_callback", "label", "label_attr", "label_format", "label_html", "label_translation_parameters", "legacy_error_messages", "mapped", "method", "post_max_size_message", "priority", "property_path", "required", "row_attr", "setter", "translation_domain", "trim", "upload_max_size_message", "validation_groups"." at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php line 102 {"exception":"[object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): An error has occurred resolving the options of the form \"App\\Form\\ReportType\": The option \"xx\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php:102)\n[previous exception] [object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): The option \"xx\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/options-resolver/OptionsResolver.php:899)"} []
[2022-05-14T12:57:40.793217+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:57:40.798896+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:57:40.801611+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:57:40.802242+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:57:40.802546+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:57:40.803641+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:40.803926+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:57:40.806143+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:40.806440+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:57:40.807083+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:40.807366+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:57:40.808366+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:57:40.809049+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:57:40.809953+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:57:40.812257+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:40.958574+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9aeb84"},"request_uri":"http://localhost/project-1/public/_wdt/9aeb84","method":"GET"} []
[2022-05-14T12:57:40.961756+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:41.112707+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:57:41.268873+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9aeb84"},"request_uri":"http://localhost/project-1/public/_wdt/9aeb84","method":"GET"} []
[2022-05-14T12:57:41.269837+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:56.672897+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:57:56.674496+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:57:56.682001+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:56.683310+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException: "An error has occurred resolving the options of the form "App\Form\ReportType": The option "place" does not exist. Defined options are: "action", "allow_extra_fields", "allow_file_upload", "attr", "attr_translation_parameters", "auto_initialize", "block_name", "block_prefix", "by_reference", "compound", "constraints", "csrf_field_name", "csrf_message", "csrf_protection", "csrf_token_id", "csrf_token_manager", "data", "data_class", "disabled", "empty_data", "error_bubbling", "error_mapping", "extra_fields_message", "form_attr", "getter", "help", "help_attr", "help_html", "help_translation_parameters", "inherit_data", "invalid_message", "invalid_message_parameters", "is_empty_callback", "label", "label_attr", "label_format", "label_html", "label_translation_parameters", "legacy_error_messages", "mapped", "method", "post_max_size_message", "priority", "property_path", "required", "row_attr", "setter", "translation_domain", "trim", "upload_max_size_message", "validation_groups"." at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php line 102 {"exception":"[object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): An error has occurred resolving the options of the form \"App\\Form\\ReportType\": The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php:102)\n[previous exception] [object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/options-resolver/OptionsResolver.php:899)"} []
[2022-05-14T12:57:56.715369+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:57:56.720410+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:57:56.724022+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:57:56.725154+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:57:56.725771+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:57:56.727923+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:56.728502+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:57:56.731638+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:56.732062+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:57:56.732914+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:56.733237+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:57:56.734258+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:57:56.734884+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:57:56.735831+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:57:56.737761+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:57:56.887748+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82de02"},"request_uri":"http://localhost/project-1/public/_wdt/82de02","method":"GET"} []
[2022-05-14T12:57:56.889319+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:57:57.050653+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:57:57.151544+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82de02"},"request_uri":"http://localhost/project-1/public/_wdt/82de02","method":"GET"} []
[2022-05-14T12:57:57.152514+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:51.919637+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T12:58:51.922057+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:58:51.927916+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:58:51.933283+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:58:51.936797+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:51.938543+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException: "An error has occurred resolving the options of the form "App\Form\ReportType": The option "place" does not exist. Defined options are: "action", "allow_extra_fields", "allow_file_upload", "attr", "attr_translation_parameters", "auto_initialize", "block_name", "block_prefix", "by_reference", "compound", "constraints", "csrf_field_name", "csrf_message", "csrf_protection", "csrf_token_id", "csrf_token_manager", "data", "data_class", "disabled", "empty_data", "error_bubbling", "error_mapping", "extra_fields_message", "form_attr", "getter", "help", "help_attr", "help_html", "help_translation_parameters", "inherit_data", "invalid_message", "invalid_message_parameters", "is_empty_callback", "label", "label_attr", "label_format", "label_html", "label_translation_parameters", "legacy_error_messages", "mapped", "method", "post_max_size_message", "priority", "property_path", "required", "row_attr", "setter", "translation_domain", "trim", "upload_max_size_message", "validation_groups"." at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php line 102 {"exception":"[object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): An error has occurred resolving the options of the form \"App\\Form\\ReportType\": The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php:102)\n[previous exception] [object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/options-resolver/OptionsResolver.php:899)"} []
[2022-05-14T12:58:51.971070+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:58:51.973742+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:58:51.974388+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:58:51.974682+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:58:51.975903+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:51.976333+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:58:51.979102+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:51.979578+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:58:51.980484+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:51.980798+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:58:51.981706+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:58:51.982252+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:58:51.982962+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:58:51.984886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:52.118550+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f13b5"},"request_uri":"http://localhost/project-1/public/_wdt/3f13b5","method":"GET"} []
[2022-05-14T12:58:52.120102+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:52.265954+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:58:52.417610+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3f13b5"},"request_uri":"http://localhost/project-1/public/_wdt/3f13b5","method":"GET"} []
[2022-05-14T12:58:52.418553+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:53.913396+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:58:53.914333+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:58:53.921437+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:58:53.926079+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:58:53.929137+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:53.930514+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\OptionsResolver\Exception\UndefinedOptionsException: "An error has occurred resolving the options of the form "App\Form\ReportType": The option "place" does not exist. Defined options are: "action", "allow_extra_fields", "allow_file_upload", "attr", "attr_translation_parameters", "auto_initialize", "block_name", "block_prefix", "by_reference", "compound", "constraints", "csrf_field_name", "csrf_message", "csrf_protection", "csrf_token_id", "csrf_token_manager", "data", "data_class", "disabled", "empty_data", "error_bubbling", "error_mapping", "extra_fields_message", "form_attr", "getter", "help", "help_attr", "help_html", "help_translation_parameters", "inherit_data", "invalid_message", "invalid_message_parameters", "is_empty_callback", "label", "label_attr", "label_format", "label_html", "label_translation_parameters", "legacy_error_messages", "mapped", "method", "post_max_size_message", "priority", "property_path", "required", "row_attr", "setter", "translation_domain", "trim", "upload_max_size_message", "validation_groups"." at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php line 102 {"exception":"[object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): An error has occurred resolving the options of the form \"App\\Form\\ReportType\": The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/form/ResolvedFormType.php:102)\n[previous exception] [object] (Symfony\\Component\\OptionsResolver\\Exception\\UndefinedOptionsException(code: 0): The option \"place\" does not exist. Defined options are: \"action\", \"allow_extra_fields\", \"allow_file_upload\", \"attr\", \"attr_translation_parameters\", \"auto_initialize\", \"block_name\", \"block_prefix\", \"by_reference\", \"compound\", \"constraints\", \"csrf_field_name\", \"csrf_message\", \"csrf_protection\", \"csrf_token_id\", \"csrf_token_manager\", \"data\", \"data_class\", \"disabled\", \"empty_data\", \"error_bubbling\", \"error_mapping\", \"extra_fields_message\", \"form_attr\", \"getter\", \"help\", \"help_attr\", \"help_html\", \"help_translation_parameters\", \"inherit_data\", \"invalid_message\", \"invalid_message_parameters\", \"is_empty_callback\", \"label\", \"label_attr\", \"label_format\", \"label_html\", \"label_translation_parameters\", \"legacy_error_messages\", \"mapped\", \"method\", \"post_max_size_message\", \"priority\", \"property_path\", \"required\", \"row_attr\", \"setter\", \"translation_domain\", \"trim\", \"upload_max_size_message\", \"validation_groups\". at /var/www/html/project-1/vendor/symfony/options-resolver/OptionsResolver.php:899)"} []
[2022-05-14T12:58:53.959370+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:58:53.962138+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:58:53.963013+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:58:53.963416+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:58:53.964782+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:53.965105+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:58:53.967322+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:53.967624+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:58:53.968308+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:53.968569+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:58:53.969517+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:58:53.970185+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:58:53.971004+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:58:53.973080+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:58:54.050325+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0aafb5"},"request_uri":"http://localhost/project-1/public/_wdt/0aafb5","method":"GET"} []
[2022-05-14T12:58:54.052114+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:54.224587+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0aafb5"},"request_uri":"http://localhost/project-1/public/_wdt/0aafb5","method":"GET"} []
[2022-05-14T12:58:54.225706+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:58:54.259230+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:58:54.615455+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0aafb5"},"request_uri":"http://localhost/project-1/public/_wdt/0aafb5","method":"GET"} []
[2022-05-14T12:58:54.616512+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:10.476529+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:59:10.477340+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:59:10.483092+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:59:10.488490+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:10.492744+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:10.498983+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:10.501556+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:10.504105+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:59:10.504739+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:59:10.505043+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:10.506180+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:10.506510+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:59:10.508772+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:10.509057+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:59:10.509767+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:10.510048+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:59:10.510948+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:59:10.511541+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:59:10.512426+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:59:10.514528+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:10.554542+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:59:10.699981+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4cae6d"},"request_uri":"http://localhost/project-1/public/_wdt/4cae6d","method":"GET"} []
[2022-05-14T12:59:10.701902+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:20.741922+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:59:20.742869+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:59:20.750312+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:59:20.756166+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:20.764443+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:20.767676+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:20.770341+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:20.832639+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:59:20.833748+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:20.834155+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:20.902755+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:20.907225+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:59:20.908155+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:59:20.908487+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:20.910568+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:20.911076+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:59:20.914927+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:20.915447+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:59:20.916746+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:20.917210+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:59:20.919114+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:59:20.920484+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:59:20.922087+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:59:20.924556+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:21.329405+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:59:37.970181+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:59:37.971741+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:59:37.980976+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:59:37.987048+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:37.994790+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:37.998653+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:38.001480+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:38.048554+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:59:38.049553+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:38.049957+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:38.117909+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:38.120913+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:59:38.121700+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:59:38.122083+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:38.123494+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:38.123886+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:59:38.126582+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:38.126975+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:59:38.128121+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:38.128532+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:59:38.130422+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:59:38.131571+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:59:38.132829+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:59:38.135384+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:38.687682+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:59:43.048998+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:59:43.049920+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:59:43.055284+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:59:43.060090+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:43.065214+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:43.067157+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:43.068427+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:43.101914+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:59:43.102821+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:43.103239+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:43.155753+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:43.158263+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:59:43.158886+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:59:43.159159+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:43.160296+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:43.160618+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:59:43.162761+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:43.163070+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:59:43.163880+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:43.164189+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:59:43.165311+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:59:43.166186+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:59:43.167199+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:59:43.169192+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:43.465813+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T12:59:43.971255+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T12:59:43.971886+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T12:59:43.976156+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T12:59:43.982267+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:43.985816+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T12:59:43.987330+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T12:59:43.988461+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:44.019764+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T12:59:44.020545+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:44.020850+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T12:59:44.080658+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:44.084701+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T12:59:44.085820+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T12:59:44.086194+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T12:59:44.087657+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:44.088082+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T12:59:44.090352+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:44.090599+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T12:59:44.091183+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:44.091376+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T12:59:44.092147+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T12:59:44.092574+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T12:59:44.093132+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T12:59:44.094580+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T12:59:44.396457+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:00:00.066360+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:00:00.067274+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:00:00.072712+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:00:00.078066+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:00:00.086580+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:00:00.089688+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:00:00.092479+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Warning: session_id(): Cannot change session id when headers already sent" at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php line 92 {"exception":"[object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T13:00:00.161206+02:00] request.CRITICAL: Exception thrown when handling an exception (RuntimeException: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145) {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)"} []
[2022-05-14T13:00:00.162827+02:00] php.CRITICAL: Uncaught Exception: Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17. {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T13:00:00.163391+02:00] request.CRITICAL: Uncaught PHP Exception RuntimeException: "Failed to start the session because headers have already been sent by "/var/www/html/project-1/src/Form/ReportType.php" at line 17." at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php line 145 {"exception":"[object] (RuntimeException(code: 0): Failed to start the session because headers have already been sent by \"/var/www/html/project-1/src/Form/ReportType.php\" at line 17. at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/NativeSessionStorage.php:145)\n[previous exception] [object] (ErrorException(code: 0): Warning: session_id(): Cannot change session id when headers already sent at /var/www/html/project-1/vendor/symfony/http-foundation/Session/Storage/Proxy/AbstractProxy.php:92)"} []
[2022-05-14T13:00:00.256520+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:00:00.262072+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:00:00.264112+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:00:00.264453+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:00:00.265878+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:00.266255+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:00:00.268887+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:00.269239+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:00:00.270026+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:00.270352+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:00:00.271364+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:00:00.271962+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:00:00.272855+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:00:00.276295+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:00.713218+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:00:16.996776+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:00:16.997850+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:00:17.004364+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:00:17.009498+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:00:17.014165+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:00:17.021774+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:00:17.024371+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:00:17.027214+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:00:17.028101+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:00:17.028465+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:00:17.030041+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:17.030488+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:00:17.033298+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:17.033602+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:00:17.034304+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:17.034541+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:00:17.035473+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:00:17.036038+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:00:17.036751+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:00:17.038439+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:00:17.092202+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:00:17.252327+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cad4ff"},"request_uri":"http://localhost/project-1/public/_wdt/cad4ff","method":"GET"} []
[2022-05-14T13:00:17.254328+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:02:53.576723+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:02:53.577625+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:02:53.583937+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:02:53.586131+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 47 near 'completer': Error: Cannot group by undefined identification or result variable." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 47 near 'completer': Error: Cannot group by undefined identification or result variable. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e GROUP BY completer at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T13:02:53.770684+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:02:53.775979+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:02:53.778583+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:02:53.779190+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:02:53.779490+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:02:53.780638+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:02:53.781002+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:02:53.783653+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:02:53.784172+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:02:53.785124+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:02:53.785465+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:02:53.786430+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:02:53.786956+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:02:53.787643+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:02:53.789917+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:02:53.923382+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba4e32"},"request_uri":"http://localhost/project-1/public/_wdt/ba4e32","method":"GET"} []
[2022-05-14T13:02:53.925470+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:02:54.108204+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba4e32"},"request_uri":"http://localhost/project-1/public/_wdt/ba4e32","method":"GET"} []
[2022-05-14T13:02:54.109305+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:02:54.113381+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:03:06.808661+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"ba4e32"},"request_uri":"http://localhost/project-1/public/_profiler/ba4e32?panel=db","method":"GET"} []
[2022-05-14T13:03:06.810614+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:03:28.186130+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:03:28.188328+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:03:28.217768+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:03:28.222532+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 47 near 'completer': Error: Cannot group by undefined identification or result variable." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 47 near 'completer': Error: Cannot group by undefined identification or result variable. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e GROUP BY completer at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T13:03:28.535103+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:03:28.543059+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:03:28.547679+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:03:28.549011+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:03:28.549718+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:03:28.552267+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:03:28.552838+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:03:28.556688+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:03:28.557106+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:03:28.558281+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:03:28.558798+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:03:28.560289+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:03:28.561243+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:03:28.562559+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:03:28.565069+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:03:28.753804+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dc781"},"request_uri":"http://localhost/project-1/public/_wdt/0dc781","method":"GET"} []
[2022-05-14T13:03:28.755117+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:03:28.955321+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dc781"},"request_uri":"http://localhost/project-1/public/_wdt/0dc781","method":"GET"} []
[2022-05-14T13:03:28.956633+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:03:29.020470+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:03:29.355190+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dc781"},"request_uri":"http://localhost/project-1/public/_wdt/0dc781","method":"GET"} []
[2022-05-14T13:03:29.357155+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:03.336192+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:04:03.337385+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:04:03.344927+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:03.346628+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 73 near 'completer': Error: Cannot group by undefined identification or result variable." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 73 near 'completer': Error: Cannot group by undefined identification or result variable. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e WHERE e.place IS NOT NULL GROUP BY completer at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T13:04:03.514403+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:04:03.519145+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:04:03.521756+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:04:03.522397+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:04:03.522702+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:04:03.523942+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:03.524307+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:04:03.527000+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:03.527379+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:04:03.528486+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:03.529068+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:04:03.530393+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:04:03.531046+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:04:03.531802+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:04:03.533553+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:03.699175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"987290"},"request_uri":"http://localhost/project-1/public/_wdt/987290","method":"GET"} []
[2022-05-14T13:04:03.700194+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:03.923279+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"987290"},"request_uri":"http://localhost/project-1/public/_wdt/987290","method":"GET"} []
[2022-05-14T13:04:03.924168+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:03.929731+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:04:04.313844+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"987290"},"request_uri":"http://localhost/project-1/public/_wdt/987290","method":"GET"} []
[2022-05-14T13:04:04.314794+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:14.700683+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:04:14.701805+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:04:14.708652+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:14.710390+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 73 near 'place': Error: Cannot group by undefined identification or result variable." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 73 near 'place': Error: Cannot group by undefined identification or result variable. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e FROM App\\Entity\\ExportMade e WHERE e.place IS NOT NULL GROUP BY place at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T13:04:14.900768+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:04:14.908497+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:04:14.914278+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:04:14.915530+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:04:14.915925+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:04:14.922836+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:14.924433+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:04:14.929129+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:14.930037+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:04:14.931088+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:14.931411+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:04:14.933408+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:04:14.934458+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:04:14.935877+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:04:14.939382+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:04:15.238428+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83f3f0"},"request_uri":"http://localhost/project-1/public/_wdt/83f3f0","method":"GET"} []
[2022-05-14T13:04:15.240531+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:15.461098+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83f3f0"},"request_uri":"http://localhost/project-1/public/_wdt/83f3f0","method":"GET"} []
[2022-05-14T13:04:15.463715+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:04:15.623595+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:04:15.868266+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83f3f0"},"request_uri":"http://localhost/project-1/public/_wdt/83f3f0","method":"GET"} []
[2022-05-14T13:04:15.870384+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:05:11.516954+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:05:11.517921+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:05:11.524790+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:05:11.529880+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place IS NOT NULL {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.place IS NOT NULL"} []
[2022-05-14T13:05:11.536084+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:05:11.542164+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:05:11.544518+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:05:11.548099+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:05:11.549066+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:05:11.549501+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:05:11.551612+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:05:11.552142+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:05:11.555711+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:05:11.556023+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:05:11.556916+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:05:11.557190+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:05:11.558379+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:05:11.559025+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:05:11.559760+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:05:11.561451+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:05:11.603822+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:05:11.752594+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba32a3"},"request_uri":"http://localhost/project-1/public/_wdt/ba32a3","method":"GET"} []
[2022-05-14T13:05:11.755573+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:05:15.068136+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"ba32a3"},"request_uri":"http://localhost/project-1/public/_profiler/ba32a3?panel=db","method":"GET"} []
[2022-05-14T13:05:15.069531+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:32.587409+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:08:32.588322+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:08:32.594935+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:32.596855+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 82 near 'place': Error: Cannot group by undefined identification or result variable." at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 82 near 'place': Error: Cannot group by undefined identification or result variable. at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT e, e.place FROM App\\Entity\\ExportMade e WHERE e.place IS NOT NULL GROUP BY place at /var/www/html/project-1/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-14T13:08:32.782308+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:08:32.787828+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:08:32.790583+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:08:32.791311+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:08:32.791640+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:08:32.792873+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:32.793312+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:08:32.796423+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:32.796942+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:08:32.797765+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:32.798004+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:08:32.798858+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:08:32.799365+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:08:32.800059+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:08:32.801522+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:32.935095+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a699b"},"request_uri":"http://localhost/project-1/public/_wdt/9a699b","method":"GET"} []
[2022-05-14T13:08:32.936190+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:33.108778+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:08:33.251970+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a699b"},"request_uri":"http://localhost/project-1/public/_wdt/9a699b","method":"GET"} []
[2022-05-14T13:08:33.253434+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:49.635972+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:08:49.636782+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:08:49.645296+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:08:49.650164+02:00] doctrine.DEBUG: Executing query: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4, e0_.place AS place_5 FROM export_made e0_ WHERE e0_.place IS NOT NULL GROUP BY e0_.place {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4, e0_.place AS place_5 FROM export_made e0_ WHERE e0_.place IS NOT NULL GROUP BY e0_.place"} []
[2022-05-14T13:08:49.694514+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:49.698582+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\DriverException: "An exception occurred while executing a query: SQLSTATE[42803]: Grouping error: 7 ERROR:  column "e0_.id" must appear in the GROUP BY clause or be used in an aggregate function LINE 1: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date...                ^" at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php line 91 {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 7): An exception occurred while executing a query: SQLSTATE[42803]: Grouping error: 7 ERROR:  column \"e0_.id\" must appear in the GROUP BY clause or be used in an aggregate function\nLINE 1: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date...\n               ^ at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:91)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[42803]: Grouping error: 7 ERROR:  column \"e0_.id\" must appear in the GROUP BY clause or be used in an aggregate function\nLINE 1: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date...\n               ^ at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 42803): SQLSTATE[42803]: Grouping error: 7 ERROR:  column \"e0_.id\" must appear in the GROUP BY clause or be used in an aggregate function\nLINE 1: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date...\n               ^ at /var/www/html/project-1/vendor/doctrine/dbal/src/Driver/PDO/Connection.php:72)"} []
[2022-05-14T13:08:49.823161+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:08:49.826204+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:08:49.826864+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:08:49.827251+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:08:49.828487+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:49.828805+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:08:49.831041+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:49.831364+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:08:49.832029+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:49.832303+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:08:49.833154+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:08:49.833681+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:08:49.834391+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:08:49.835886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:08:49.993813+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"93026e"},"request_uri":"http://localhost/project-1/public/_wdt/93026e","method":"GET"} []
[2022-05-14T13:08:49.995219+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:08:50.212634+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:08:50.392516+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"93026e"},"request_uri":"http://localhost/project-1/public/_wdt/93026e","method":"GET"} []
[2022-05-14T13:08:50.394176+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:09:35.728240+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:09:35.729330+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:09:35.739112+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:09:35.746463+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ WHERE e0_.place IS NOT NULL GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ WHERE e0_.place IS NOT NULL GROUP BY e0_.place"} []
[2022-05-14T13:09:35.760885+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:09:35.772164+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:09:35.776499+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:09:35.780184+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:09:35.781469+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:09:35.782164+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:09:35.783949+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:09:35.784466+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:09:35.788848+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:09:35.789542+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:09:35.791158+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:09:35.791772+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:09:35.793760+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:09:35.794676+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:09:35.795890+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:09:35.798953+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:09:35.851206+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:09:36.045106+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b6f739"},"request_uri":"http://localhost/project-1/public/_wdt/b6f739","method":"GET"} []
[2022-05-14T13:09:36.047613+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:09:41.719430+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"b6f739"},"request_uri":"http://localhost/project-1/public/_profiler/b6f739?panel=db","method":"GET"} []
[2022-05-14T13:09:41.721422+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:10:04.641311+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:10:04.642862+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:10:04.652632+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:10:04.658269+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:10:04.664503+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:10:04.671652+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:10:04.674677+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:10:04.677817+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:10:04.678700+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:10:04.679135+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:10:04.680733+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:10:04.681126+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:10:04.683565+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:10:04.683865+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:10:04.684624+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:10:04.684935+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:10:04.685944+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:10:04.686554+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:10:04.687304+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:10:04.689065+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:10:04.733657+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:10:04.868382+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82df67"},"request_uri":"http://localhost/project-1/public/_wdt/82df67","method":"GET"} []
[2022-05-14T13:10:04.870194+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:10:06.723017+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"82df67"},"request_uri":"http://localhost/project-1/public/_profiler/82df67?panel=db","method":"GET"} []
[2022-05-14T13:10:06.724230+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:10:12.051628+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"82df67"},"request_uri":"http://localhost/project-1/public/_profiler/82df67?connection=default&page=explain&panel=db&query=1","method":"GET"} []
[2022-05-14T13:10:12.052945+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:10:12.062911+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:10:12.067862+02:00] doctrine.DEBUG: Executing query: EXPLAIN SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"EXPLAIN SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:10:12.071336+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:11:42.505199+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:11:42.506191+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:11:42.511971+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:11:42.517521+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:11:42.522763+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:11:42.530008+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:11:42.533044+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:11:42.536243+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:11:42.537236+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:11:42.537611+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:11:42.539002+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:11:42.539398+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:11:42.542079+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:11:42.542504+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:11:42.543565+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:11:42.543985+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:11:42.545346+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:11:42.546355+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:11:42.547359+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:11:42.549536+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:11:42.597336+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:11:42.735189+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf4140"},"request_uri":"http://localhost/project-1/public/_wdt/bf4140","method":"GET"} []
[2022-05-14T13:11:42.737664+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:52.902451+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:12:52.903281+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:12:52.908578+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:12:52.914218+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:12:52.918753+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:52.920416+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: places" at /var/www/html/project-1/src/Form/ReportType.php line 22 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: places at /var/www/html/project-1/src/Form/ReportType.php:22)"} []
[2022-05-14T13:12:52.940718+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:12:52.944548+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:12:52.945654+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:12:52.946263+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:12:52.948053+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:52.948546+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:12:52.952212+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:52.952559+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:12:52.953522+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:52.953814+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:12:52.955158+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:12:52.956037+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:12:52.957117+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:12:52.959529+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:53.096543+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9f235"},"request_uri":"http://localhost/project-1/public/_wdt/d9f235","method":"GET"} []
[2022-05-14T13:12:53.098784+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:53.238385+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:12:53.326995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9f235"},"request_uri":"http://localhost/project-1/public/_wdt/d9f235","method":"GET"} []
[2022-05-14T13:12:53.328699+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:54.466057+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:12:54.467299+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:12:54.474799+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:12:54.479770+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:12:54.483381+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:54.485131+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: places" at /var/www/html/project-1/src/Form/ReportType.php line 22 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: places at /var/www/html/project-1/src/Form/ReportType.php:22)"} []
[2022-05-14T13:12:54.513784+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:12:54.516152+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:12:54.516776+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:12:54.517078+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:12:54.518209+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:54.518532+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:12:54.520791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:54.521096+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:12:54.521766+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:54.522031+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:12:54.522911+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:12:54.523579+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:12:54.524558+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:12:54.527698+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:12:54.604306+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc2820"},"request_uri":"http://localhost/project-1/public/_wdt/fc2820","method":"GET"} []
[2022-05-14T13:12:54.605939+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:54.752116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc2820"},"request_uri":"http://localhost/project-1/public/_wdt/fc2820","method":"GET"} []
[2022-05-14T13:12:54.753463+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:12:54.779363+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:12:55.149004+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc2820"},"request_uri":"http://localhost/project-1/public/_wdt/fc2820","method":"GET"} []
[2022-05-14T13:12:55.150288+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:13:04.089703+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:13:04.091035+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:13:04.101469+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:13:04.107342+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:13:04.114092+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:13:04.121978+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:13:04.124585+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:13:04.127250+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:13:04.128024+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:13:04.128337+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:13:04.129595+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:13:04.129973+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:13:04.132570+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:13:04.132928+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:13:04.133757+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:13:04.134075+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:13:04.135071+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:13:04.135650+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:13:04.136409+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:13:04.138192+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:13:04.184847+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:13:04.384089+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"406705"},"request_uri":"http://localhost/project-1/public/_wdt/406705","method":"GET"} []
[2022-05-14T13:13:04.385565+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:28.341927+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:14:28.343149+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:14:28.352269+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:14:28.357375+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:14:28.363738+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:14:28.370787+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:28.373177+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:28.375703+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:14:28.376406+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:14:28.376730+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:28.377938+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:28.378275+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:14:28.380621+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:28.380967+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:14:28.381707+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:28.382005+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:14:28.382899+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:14:28.383455+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:14:28.384177+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:14:28.385754+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:28.424060+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:14:28.586245+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad4105"},"request_uri":"http://localhost/project-1/public/_wdt/ad4105","method":"GET"} []
[2022-05-14T13:14:28.587800+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:29.891166+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:14:29.892298+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:14:29.897811+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:14:29.903509+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:14:29.907623+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:14:29.916443+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:29.919365+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:29.921680+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:14:29.922249+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:14:29.922503+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:29.923547+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:29.923867+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:14:29.926600+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:29.927033+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:14:29.928195+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:29.928768+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:14:29.930333+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:14:29.930978+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:14:29.931763+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:14:29.933847+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:29.979062+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:14:30.071572+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a99448"},"request_uri":"http://localhost/project-1/public/_wdt/a99448","method":"GET"} []
[2022-05-14T13:14:30.072634+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:48.557255+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:14:48.558086+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:14:48.565697+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:14:48.570660+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:14:48.575663+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:14:48.582086+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:48.584633+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:48.587092+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:14:48.587885+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:14:48.588349+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:48.590022+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:48.590585+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:14:48.593225+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:48.593568+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:14:48.594298+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:48.594612+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:14:48.595719+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:14:48.596533+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:14:48.597607+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:14:48.599759+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:48.639324+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:14:48.785083+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c65d4f"},"request_uri":"http://localhost/project-1/public/_wdt/c65d4f","method":"GET"} []
[2022-05-14T13:14:48.786922+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:50.107530+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:14:50.108337+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:14:50.114209+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:14:50.119998+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:14:50.124386+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:14:50.130387+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:14:50.132514+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:50.134994+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:14:50.135596+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:14:50.135872+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:14:50.137103+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:50.137498+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:14:50.140333+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:50.140882+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:14:50.141864+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:50.142196+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:14:50.143120+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:14:50.143666+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:14:50.144357+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:14:50.146090+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:14:50.184296+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:14:50.259380+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"16dbe4"},"request_uri":"http://localhost/project-1/public/_wdt/16dbe4","method":"GET"} []
[2022-05-14T13:14:50.260982+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:04.011928+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:15:04.013505+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:15:04.024543+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:15:04.031194+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:15:04.036843+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:15:04.043591+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:04.046540+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:04.049519+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:15:04.050270+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:15:04.050603+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:04.051855+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:04.052226+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:15:04.054722+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:04.055061+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:15:04.055828+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:04.056101+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:15:04.057076+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:15:04.057671+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:15:04.058466+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:15:04.060543+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:04.104865+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:15:04.267778+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99fa6c"},"request_uri":"http://localhost/project-1/public/_wdt/99fa6c","method":"GET"} []
[2022-05-14T13:15:04.269543+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:04.981940+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:15:04.985140+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:15:04.994755+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:15:05.004672+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:15:05.010237+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:15:05.017414+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:05.019861+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:05.024054+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:15:05.025129+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:15:05.025473+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:05.028077+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:05.028688+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:15:05.033110+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:05.033814+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:15:05.035687+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:05.036180+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:15:05.037880+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:15:05.038757+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:15:05.039807+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:15:05.042558+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:05.125650+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:15:05.218352+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"51a09e"},"request_uri":"http://localhost/project-1/public/_wdt/51a09e","method":"GET"} []
[2022-05-14T13:15:05.219512+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:29.679946+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:15:29.681045+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:15:29.687949+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:15:29.692917+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:15:29.697575+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:15:29.703634+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:29.706014+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:29.708419+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:15:29.709098+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:15:29.709441+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:29.710887+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:29.711527+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:15:29.714764+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:29.715326+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:15:29.716551+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:29.717032+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:15:29.718312+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:15:29.718982+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:15:29.719742+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:15:29.721477+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:29.762114+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:15:29.927765+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48ab26"},"request_uri":"http://localhost/project-1/public/_wdt/48ab26","method":"GET"} []
[2022-05-14T13:15:29.929712+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:31.066204+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:15:31.067035+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:15:31.072688+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:15:31.077585+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:15:31.081881+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:15:31.087756+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:15:31.089817+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:31.092159+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:15:31.092767+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:15:31.093063+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:15:31.094387+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:31.094842+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:15:31.097776+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:31.098276+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:15:31.099130+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:31.099424+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:15:31.100341+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:15:31.100876+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:15:31.101563+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:15:31.103084+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:15:31.139910+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:15:31.207805+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eca397"},"request_uri":"http://localhost/project-1/public/_wdt/eca397","method":"GET"} []
[2022-05-14T13:15:31.209385+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:17.982212+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:16:17.983744+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:17.992277+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:17.997220+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:18.001756+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:16:18.009073+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:18.011685+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:18.014359+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:18.015349+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:18.015806+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:18.017225+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:18.017631+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:18.019995+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:18.020352+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:18.021116+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:18.021404+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:18.022325+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:18.022878+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:18.023593+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:18.025239+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:18.063275+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:18.193474+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c65731"},"request_uri":"http://localhost/project-1/public/_wdt/c65731","method":"GET"} []
[2022-05-14T13:16:18.195043+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:29.022324+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:29.026022+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:29.077417+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:29.084303+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:29.087397+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:29.088361+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:29.088794+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:29.091260+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:29.091934+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:29.095029+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:29.095448+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:29.096675+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:29.097117+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:29.098625+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:29.099844+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:29.101302+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:29.103551+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:29.380713+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:39.908989+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:16:39.911888+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:39.937301+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:39.952387+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:39.965495+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:16:39.982717+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:39.986973+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:39.992408+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:39.993808+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:39.994803+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:39.997260+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:39.998087+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:40.003442+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.004253+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:40.005376+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.005707+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:40.006933+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:40.007732+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:40.008756+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:40.011022+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.076427+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:40.279700+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:40.285481+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:40.323400+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bdd139"},"request_uri":"http://localhost/project-1/public/_wdt/bdd139","method":"GET"} []
[2022-05-14T13:16:40.333026+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:40.374474+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:40.385225+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:40.390869+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:40.392325+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:40.393163+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:40.397682+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.398665+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:40.403522+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.403978+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:40.405213+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.405566+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:40.407215+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:40.408122+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:40.409284+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:40.412154+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:40.781937+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:43.741314+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:16:43.769253+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:43.775388+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:43.780184+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:43.921569+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:16:43.928566+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:43.931471+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:43.934034+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:43.934960+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:43.935345+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:43.936534+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:43.936828+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:43.938961+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:43.939222+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:43.939872+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:43.940060+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:43.940902+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:43.941416+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:43.942089+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:43.943781+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:43.984879+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:44.202341+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:44.205198+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:44.242931+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d7ead"},"request_uri":"http://localhost/project-1/public/_wdt/9d7ead","method":"GET"} []
[2022-05-14T13:16:44.245067+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:44.256148+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:44.262290+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:44.265912+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:44.266930+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:44.267569+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:44.269471+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:44.270166+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:44.273091+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:44.273456+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:44.274221+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:44.274469+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:44.275418+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:44.275965+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:44.276816+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:44.279384+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:44.549113+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:46.187356+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:16:46.189456+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:46.198725+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:46.204132+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:46.343126+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ? (parameters: array{"1":"1970-01-01 00:00:00","2":"Lokal0"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ?","params":{"1":"1970-01-01 00:00:00","2":"Lokal0"},"types":{"1":2,"2":2}} []
[2022-05-14T13:16:46.348909+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:46.351524+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:46.353932+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:46.354568+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:46.354865+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:46.355950+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.356238+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:46.358404+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.358694+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:46.359354+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.359650+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:46.360501+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:46.360934+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:46.361572+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:46.363148+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.403838+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:46.577995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a682aa"},"request_uri":"http://localhost/project-1/public/_wdt/a682aa","method":"GET"} []
[2022-05-14T13:16:46.579812+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:46.583648+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:46.588450+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:46.650126+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:46.655930+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:46.658750+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:46.659427+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:46.659745+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:46.661265+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.661563+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:46.664030+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.664516+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:46.665480+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.665910+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:46.667224+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:46.668046+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:46.668916+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:46.670433+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:46.958781+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:49.387911+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:16:49.389196+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:49.397269+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:49.404173+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:49.543289+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ? (parameters: array{"1":"1970-01-01 00:00:00","2":"Lokal8"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ?","params":{"1":"1970-01-01 00:00:00","2":"Lokal8"},"types":{"1":2,"2":2}} []
[2022-05-14T13:16:49.549333+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:49.551570+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:49.554720+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:49.555619+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:49.556049+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:49.557569+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.558055+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:49.560359+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.560652+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:49.561307+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.561580+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:49.562425+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:49.562885+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:49.563638+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:49.565559+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.606766+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:49.759724+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d4484"},"request_uri":"http://localhost/project-1/public/_wdt/5d4484","method":"GET"} []
[2022-05-14T13:16:49.761737+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:49.779734+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:49.786118+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:49.832399+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:49.838540+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:49.841536+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:49.842216+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:49.842534+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:49.843875+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.844241+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:49.846616+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.846939+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:49.847688+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:49.847936+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:49.848953+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:49.849644+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:49.850621+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:49.852761+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:50.150726+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:52.283613+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:16:52.285692+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:16:52.294152+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:52.300227+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:16:52.440033+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:16:52.446755+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:52.449763+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:52.452260+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:52.452948+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:52.453254+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:52.454370+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.454680+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:52.456886+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.457175+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:52.457838+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.458109+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:52.458943+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:52.459447+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:52.460119+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:52.461786+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.502785+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:16:52.662635+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:52.668686+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET http://localhost/project-1/public/assets/js/popper.min.js.map"" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET http://localhost/project-1/public/assets/js/popper.min.js.map\" at /var/www/html/project-1/vendor/symfony/http-kernel/EventListener/RouterListener.php:135)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/assets/js/popper.min.js.map/\". at /var/www/html/project-1/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-14T13:16:52.673049+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8628c"},"request_uri":"http://localhost/project-1/public/_wdt/a8628c","method":"GET"} []
[2022-05-14T13:16:52.674681+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:16:52.713277+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:16:52.720077+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:52.722909+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:16:52.723564+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:16:52.723799+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:16:52.725205+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.725542+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:16:52.728192+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.728522+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:16:52.729246+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:52.729508+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:16:52.730582+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:16:52.731125+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:16:52.731889+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:16:52.734065+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:16:53.051045+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:11.818729+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:11.820748+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:11.831210+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:11.838242+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:12.002413+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:17:12.009593+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:12.011999+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:12.014259+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:12.014886+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:12.015164+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:12.016311+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:12.016638+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:12.018815+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:12.019106+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:12.019750+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:12.019962+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:12.020796+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:12.021298+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:12.021964+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:12.023601+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:12.064665+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:12.214024+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bdd594"},"request_uri":"http://localhost/project-1/public/_wdt/bdd594","method":"GET"} []
[2022-05-14T13:17:12.214972+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:13.473287+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:13.475006+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:13.482804+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:13.489955+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:13.634344+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:17:13.640607+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:13.642666+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:13.645012+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:13.645636+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:13.645928+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:13.646986+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:13.647279+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:13.649341+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:13.649628+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:13.650260+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:13.650528+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:13.651466+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:13.652277+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:13.653255+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:13.655387+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:13.696438+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:13.770144+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a8b1fa"},"request_uri":"http://localhost/project-1/public/_wdt/a8b1fa","method":"GET"} []
[2022-05-14T13:17:13.771779+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:29.349387+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:29.350843+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:29.357566+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:29.362341+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:29.544153+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-05-16 00:00:00","2":"2022-05-16 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-05-16 00:00:00","2":"2022-05-16 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:17:29.549628+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:29.551884+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:29.554039+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:29.554592+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:29.554813+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:29.555795+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:29.556028+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:29.558050+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:29.558272+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:29.558853+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:29.559169+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:29.560143+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:29.560678+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:29.561498+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:29.563407+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:29.608434+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:29.743787+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"513877"},"request_uri":"http://localhost/project-1/public/_wdt/513877","method":"GET"} []
[2022-05-14T13:17:29.745369+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:33.542494+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:33.543634+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:33.550275+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:33.555827+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:33.746846+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-05-16 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-05-16 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:17:33.752318+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:33.754607+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:33.756825+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:33.757421+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:33.757709+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:33.758791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:33.759100+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:33.761230+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:33.761523+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:33.762410+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:33.762733+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:33.763942+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:33.764746+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:33.765688+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:33.767912+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:33.810639+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:33.888217+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63dc68"},"request_uri":"http://localhost/project-1/public/_wdt/63dc68","method":"GET"} []
[2022-05-14T13:17:33.889910+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:39.250880+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:39.253121+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:39.263340+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:39.268361+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:39.452949+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:17:39.458582+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:39.460917+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:39.463290+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:39.463925+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:39.464216+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:39.465445+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:39.465856+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:39.469456+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:39.469900+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:39.470986+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:39.471364+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:39.472816+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:39.473459+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:39.474173+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:39.475791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:39.516925+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:39.603703+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45a3de"},"request_uri":"http://localhost/project-1/public/_wdt/45a3de","method":"GET"} []
[2022-05-14T13:17:39.606166+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:40.328282+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:17:40.329633+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:17:40.337609+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:17:40.342628+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:17:40.534725+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:17:40.540307+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:40.542421+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:40.545577+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:17:40.546273+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:17:40.546543+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:17:40.547933+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:40.548221+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:17:40.551355+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:40.551800+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:17:40.552982+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:40.553372+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:17:40.554859+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:17:40.555629+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:17:40.556571+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:17:40.558355+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:17:40.599988+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:17:40.666333+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf85d0"},"request_uri":"http://localhost/project-1/public/_wdt/cf85d0","method":"GET"} []
[2022-05-14T13:17:40.667975+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:17:43.298662+02:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"cf85d0"},"request_uri":"http://localhost/project-1/public/_profiler/cf85d0?panel=db","method":"GET"} []
[2022-05-14T13:17:43.319352+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:01.689433+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:19:01.690918+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:19:01.697663+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:19:01.703041+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:19:01.882609+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-05-13 00:00:00","2":"2022-05-17 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T13:19:01.888767+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:01.891206+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:01.893475+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:19:01.894099+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:19:01.894391+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:01.895568+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:01.895877+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:19:01.898050+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:01.898346+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:19:01.898995+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:01.899265+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:19:01.900115+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:19:01.900637+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:19:01.901309+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:19:01.903029+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:01.950945+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:19:02.093007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e30489"},"request_uri":"http://localhost/project-1/public/_wdt/e30489","method":"GET"} []
[2022-05-14T13:19:02.094498+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:20.937959+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:19:20.939252+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:19:20.945989+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:19:20.951109+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place"} []
[2022-05-14T13:19:21.129957+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:19:21.135843+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:21.138145+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:21.140767+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:19:21.141691+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:19:21.142120+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:21.143589+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:21.143940+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:19:21.146280+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:21.146589+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:19:21.147266+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:21.147547+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:19:21.148447+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:19:21.148928+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:19:21.149690+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:19:21.151840+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:21.195891+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:19:21.340639+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e863bb"},"request_uri":"http://localhost/project-1/public/_wdt/e863bb","method":"GET"} []
[2022-05-14T13:19:21.342534+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:54.452775+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:19:54.454321+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:19:54.462314+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:19:54.467229+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place DESC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place DESC"} []
[2022-05-14T13:19:54.662202+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:19:54.668467+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:19:54.670757+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:54.673498+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:19:54.674326+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:19:54.674704+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:19:54.676238+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:54.676845+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:19:54.679547+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:54.679868+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:19:54.680545+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:54.680814+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:19:54.681672+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:19:54.682140+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:19:54.682879+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:19:54.684855+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:19:54.727614+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:19:54.850394+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b242c7"},"request_uri":"http://localhost/project-1/public/_wdt/b242c7","method":"GET"} []
[2022-05-14T13:19:54.851729+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:04.993771+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:04.995852+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:05.006600+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:05.011820+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:05.208233+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:20:05.214105+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:05.216412+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:05.218615+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:05.219198+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:05.219480+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:05.220633+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:05.220964+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:05.223145+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:05.223437+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:05.224091+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:05.224367+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:05.225199+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:05.225659+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:05.226324+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:05.227976+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:05.270944+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:05.384294+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f1daad"},"request_uri":"http://localhost/project-1/public/_wdt/f1daad","method":"GET"} []
[2022-05-14T13:20:05.386231+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:09.643220+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:09.645459+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:09.655617+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:09.662027+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:09.864464+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal6"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:20:09.872101+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:09.874949+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:09.878768+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:09.879500+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:09.879793+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:09.881349+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:09.881669+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:09.884978+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:09.885437+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:09.886586+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:09.886971+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:09.888512+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:09.889201+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:09.889969+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:09.891774+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:09.939799+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:10.024668+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"619d30"},"request_uri":"http://localhost/project-1/public/_wdt/619d30","method":"GET"} []
[2022-05-14T13:20:10.026223+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:11.707306+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:11.708583+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:11.714402+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:11.719645+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:11.895125+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59"},"types":{"1":2,"2":2}} []
[2022-05-14T13:20:11.900821+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:11.903439+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:11.906143+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:11.907038+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:11.907442+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:11.908824+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:11.909223+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:11.911620+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:11.911892+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:11.912589+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:11.912809+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:11.913668+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:11.914433+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:11.915375+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:11.917287+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:11.959071+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:12.031644+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"292212"},"request_uri":"http://localhost/project-1/public/_wdt/292212","method":"GET"} []
[2022-05-14T13:20:12.033353+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:16.322015+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:16.323408+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:16.329739+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:16.334962+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:16.514644+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ? (parameters: array{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal4"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.creation_date <= ? AND e0_.place = ?","params":{"1":"2022-02-14 00:00:00","2":"2022-02-17 23:59:59","3":"Lokal4"},"types":{"1":2,"2":2,"3":2}} []
[2022-05-14T13:20:16.520395+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:16.523216+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:16.525854+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:16.526744+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:16.527143+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:16.528571+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:16.528953+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:16.531192+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:16.531481+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:16.532117+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:16.532392+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:16.533227+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:16.533698+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:16.534371+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:16.535981+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:16.580822+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:16.648293+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9d0ad"},"request_uri":"http://localhost/project-1/public/_wdt/d9d0ad","method":"GET"} []
[2022-05-14T13:20:16.650112+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:24.449587+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:20:24.450769+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:24.459436+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:24.464267+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:24.469739+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:20:24.476617+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:24.479086+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:24.481555+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:24.482214+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:24.482522+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:24.483647+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:24.483974+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:24.486218+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:24.486512+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:24.487191+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:24.487466+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:24.488331+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:24.488859+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:24.489545+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:24.491087+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:24.529135+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:24.614805+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2edd09"},"request_uri":"http://localhost/project-1/public/_wdt/2edd09","method":"GET"} []
[2022-05-14T13:20:24.616629+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:26.285305+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:26.312887+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:26.317760+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:26.322333+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:26.462474+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:20:26.468493+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:26.470548+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:26.472717+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:26.473252+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:26.473470+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:26.474433+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:26.474670+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:26.476883+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:26.477194+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:26.477986+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:26.478363+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:26.479513+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:26.480152+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:26.480800+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:26.482382+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:26.524439+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:26.605637+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4734f8"},"request_uri":"http://localhost/project-1/public/_wdt/4734f8","method":"GET"} []
[2022-05-14T13:20:26.607548+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:27.201290+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:20:27.202725+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:27.210022+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:27.215482+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:27.349999+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:20:27.356075+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:27.358284+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:27.360742+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:27.361689+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:27.362125+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:27.363494+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:27.363844+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:27.366057+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:27.366372+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:27.367053+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:27.367325+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:27.368170+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:27.368805+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:27.369655+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:27.371702+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:27.412777+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:27.480049+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa0843"},"request_uri":"http://localhost/project-1/public/_wdt/fa0843","method":"GET"} []
[2022-05-14T13:20:27.481253+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:34.967617+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:20:34.968748+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:20:34.976263+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:20:34.981859+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:20:34.986943+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:20:34.993823+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:20:34.996468+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:34.999468+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:20:35.000491+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:20:35.000940+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:20:35.002484+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:35.003032+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:20:35.006086+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:35.006477+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:20:35.007310+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:35.007610+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:20:35.008654+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:20:35.009249+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:20:35.010041+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:20:35.011810+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:20:35.052116+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:20:35.129353+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9b06ce"},"request_uri":"http://localhost/project-1/public/_wdt/9b06ce","method":"GET"} []
[2022-05-14T13:20:35.130693+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerZXxCJGX/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:24.404703+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:21:24.405797+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:21:24.411199+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:21:24.416411+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:21:24.422806+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:21:24.430591+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:24.433499+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:24.436035+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:21:24.436981+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:21:24.437441+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:24.439043+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:24.439578+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:21:24.442269+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:24.442691+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:21:24.443737+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:24.444188+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:21:24.445354+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:21:24.445980+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:21:24.446729+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:21:24.449414+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:24.494056+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:21:24.640264+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"047a0e"},"request_uri":"http://localhost/project-1/public/_wdt/047a0e","method":"GET"} []
[2022-05-14T13:21:24.641951+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:26.749285+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:21:26.751838+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:21:26.764857+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:21:26.770711+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:21:26.910403+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:21:26.919711+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:26.923315+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:26.925511+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:21:26.926233+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:21:26.926577+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:26.928353+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:26.928864+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:21:26.931309+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:26.931642+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:21:26.932323+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:26.932589+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:21:26.933422+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:21:26.933911+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:21:26.934572+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:21:26.937119+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:27.001934+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:21:27.073013+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36276e"},"request_uri":"http://localhost/project-1/public/_wdt/36276e","method":"GET"} []
[2022-05-14T13:21:27.075212+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:28.328751+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:21:28.329877+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:21:28.337018+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:21:28.343794+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:21:28.348854+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:21:28.356427+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:21:28.359163+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:28.362492+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:21:28.363554+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:21:28.364040+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:21:28.365565+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:28.365969+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:21:28.368619+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:28.368992+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:21:28.369941+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:28.370379+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:21:28.371706+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:21:28.372571+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:21:28.373684+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:21:28.375539+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:21:28.417349+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:21:28.506009+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b6090b"},"request_uri":"http://localhost/project-1/public/_wdt/b6090b","method":"GET"} []
[2022-05-14T13:21:28.509399+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:08.775953+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"GET"} []
[2022-05-14T13:22:08.777676+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:22:08.791143+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:22:08.798656+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:22:08.810217+02:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0 {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.creation_date AS creation_date_3, t0.user_name AS user_name_4, t0.place AS place_5 FROM export_made t0"} []
[2022-05-14T13:22:08.825382+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:08.831043+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:08.844272+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:22:08.845588+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:22:08.846151+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:08.848497+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:08.848991+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:22:08.854004+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:08.854880+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:22:08.856614+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:08.857316+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:22:08.859399+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:22:08.860323+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:22:08.861331+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:22:08.864002+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:08.930908+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:22:09.045518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ab5a7b"},"request_uri":"http://localhost/project-1/public/_wdt/ab5a7b","method":"GET"} []
[2022-05-14T13:22:09.047682+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:10.161436+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:22:10.163652+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:22:10.200454+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:22:10.232407+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:22:10.621264+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:22:10.636931+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:10.642512+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:10.647641+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:22:10.649105+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:22:10.649662+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:10.652326+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:10.653086+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:22:10.659621+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:10.660340+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:22:10.662840+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:10.664934+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:22:10.671271+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:22:10.674096+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:22:10.676833+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:22:10.682033+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:10.780769+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:22:10.902803+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21d276"},"request_uri":"http://localhost/project-1/public/_wdt/21d276","method":"GET"} []
[2022-05-14T13:22:10.909058+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:12.212974+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:22:12.214775+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:22:12.221679+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:22:12.227324+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:22:12.376334+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ? (parameters: array{"1":"1970-01-01 00:00:00","2":"Lokal2"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ?","params":{"1":"1970-01-01 00:00:00","2":"Lokal2"},"types":{"1":2,"2":2}} []
[2022-05-14T13:22:12.382923+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:12.385420+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:12.387882+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:22:12.388598+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:22:12.388932+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:12.390140+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:12.390482+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:22:12.392892+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:12.393224+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:22:12.394083+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:12.394439+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:22:12.395475+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:22:12.395955+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:22:12.396724+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:22:12.398463+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:12.445771+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:22:12.512312+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6f54be"},"request_uri":"http://localhost/project-1/public/_wdt/6f54be","method":"GET"} []
[2022-05-14T13:22:12.513930+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:14.390376+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:22:14.392124+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:22:14.400686+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:22:14.406620+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:22:14.541322+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:22:14.547202+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:22:14.549265+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:14.551492+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:22:14.552076+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:22:14.552373+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:22:14.553609+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:14.553995+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:22:14.557275+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:14.557786+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:22:14.558654+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:14.558970+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:22:14.559826+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:22:14.560328+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:22:14.561021+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:22:14.562575+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:22:14.604490+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:22:14.674590+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad9bcd"},"request_uri":"http://localhost/project-1/public/_wdt/ad9bcd","method":"GET"} []
[2022-05-14T13:22:14.675878+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:44.735788+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:23:44.742139+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:23:44.749643+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:23:44.757235+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:23:44.915155+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:23:44.923294+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:44.926408+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:44.928882+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:23:44.929476+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:23:44.929707+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:44.930771+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:44.931021+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:23:44.933256+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:44.933518+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:23:44.934154+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:44.934383+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:23:44.935204+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:23:44.935668+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:23:44.936322+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:23:44.938597+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:44.981424+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:23:45.100282+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d1a447"},"request_uri":"http://localhost/project-1/public/_wdt/d1a447","method":"GET"} []
[2022-05-14T13:23:45.101429+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:47.074615+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:23:47.076943+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:23:47.086359+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:23:47.093239+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:23:47.240179+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ? (parameters: array{"1":"1970-01-01 00:00:00","2":"Lokal2"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ?","params":{"1":"1970-01-01 00:00:00","2":"Lokal2"},"types":{"1":2,"2":2}} []
[2022-05-14T13:23:47.247006+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:47.249396+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:47.251741+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:23:47.252397+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:23:47.252707+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:47.253848+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:47.254191+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:23:47.256703+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:47.257043+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:23:47.257752+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:47.258033+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:23:47.258918+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:23:47.259399+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:23:47.260098+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:23:47.261794+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:47.302859+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:23:47.376997+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bf11cc"},"request_uri":"http://localhost/project-1/public/_wdt/bf11cc","method":"GET"} []
[2022-05-14T13:23:47.378497+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:51.191809+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:23:51.193781+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:23:51.202519+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:23:51.207473+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:23:51.343234+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ? (parameters: array{"1":"1970-01-01 00:00:00","2":"Lokal5"}, types: array{"1":2,"2":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? AND e0_.place = ?","params":{"1":"1970-01-01 00:00:00","2":"Lokal5"},"types":{"1":2,"2":2}} []
[2022-05-14T13:23:51.349848+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:51.352086+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:51.354387+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:23:51.355004+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:23:51.355306+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:51.356392+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:51.356702+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:23:51.358887+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:51.359153+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:23:51.359822+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:51.360041+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:23:51.360871+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:23:51.361366+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:23:51.362035+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:23:51.363646+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:51.403618+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:23:51.468711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18c710"},"request_uri":"http://localhost/project-1/public/_wdt/18c710","method":"GET"} []
[2022-05-14T13:23:51.470297+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:53.243622+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:23:53.244927+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:23:53.250390+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:23:53.255915+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:23:53.387850+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:23:53.393763+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:23:53.395877+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:53.398492+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:23:53.399397+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:23:53.399864+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:23:53.401157+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:53.401511+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:23:53.403684+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:53.403940+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:23:53.404650+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:53.404934+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:23:53.406028+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:23:53.406791+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:23:53.407762+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:23:53.409791+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:23:53.450116+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:23:53.509494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d15379"},"request_uri":"http://localhost/project-1/public/_wdt/d15379","method":"GET"} []
[2022-05-14T13:23:53.511908+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:11.908581+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:24:11.910436+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:24:11.918667+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:24:11.925919+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:24:12.065297+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:24:12.072064+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:12.074940+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:12.077495+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:24:12.078160+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:24:12.078462+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:12.079605+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:12.079926+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:24:12.082085+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:12.082365+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:24:12.083008+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:12.083278+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:24:12.084117+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:24:12.084641+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:24:12.085386+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:24:12.087338+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:12.134395+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:24:12.249054+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc02e8"},"request_uri":"http://localhost/project-1/public/_wdt/fc02e8","method":"GET"} []
[2022-05-14T13:24:12.250058+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:44.556846+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:24:44.558415+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:24:44.564718+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:24:44.569714+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:24:44.762018+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:24:44.774678+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:44.777573+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:44.779862+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:24:44.780524+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:24:44.780779+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:44.781962+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:44.782295+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:24:44.784801+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:44.785115+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:24:44.785906+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:44.786201+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:24:44.787245+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:24:44.787814+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:24:44.788562+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:24:44.790455+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:44.837186+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:24:45.004625+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"234e68"},"request_uri":"http://localhost/project-1/public/_wdt/234e68","method":"GET"} []
[2022-05-14T13:24:45.006967+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:53.932189+02:00] request.INFO: Matched route "app_report". {"route":"app_report","route_parameters":{"_route":"app_report","_controller":"App\\Controller\\ReportController::index"},"request_uri":"http://localhost/project-1/public/","method":"POST"} []
[2022-05-14T13:24:53.933791+02:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-14T13:24:53.942760+02:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"project-1","serverVersion":"13","charset":"utf8"}} []
[2022-05-14T13:24:53.947975+02:00] doctrine.DEBUG: Executing query: SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC {"sql":"SELECT e0_.place AS place_0 FROM export_made e0_ GROUP BY e0_.place ORDER BY e0_.place ASC"} []
[2022-05-14T13:24:54.081212+02:00] doctrine.DEBUG: Executing statement: SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ? (parameters: array{"1":"1970-01-01 00:00:00"}, types: array{"1":2}) {"sql":"SELECT e0_.id AS id_0, e0_.name AS name_1, e0_.creation_date AS creation_date_2, e0_.user_name AS user_name_3, e0_.place AS place_4 FROM export_made e0_ WHERE e0_.creation_date >= ?","params":{"1":"1970-01-01 00:00:00"},"types":{"1":2}} []
[2022-05-14T13:24:54.088307+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-14T13:24:54.090604+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:54.092920+02:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-14T13:24:54.093560+02:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-14T13:24:54.093933+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-14T13:24:54.095112+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:54.095438+02:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-14T13:24:54.097615+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:54.097886+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-14T13:24:54.098540+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:54.098815+02:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-14T13:24:54.099643+02:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=16435 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-14T13:24:54.100140+02:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-14T13:24:54.100805+02:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-14T13:24:54.102441+02:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-14T13:24:54.149018+02:00] doctrine.INFO: Disconnecting [] []
[2022-05-14T13:24:54.264207+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"927e28"},"request_uri":"http://localhost/project-1/public/_wdt/927e28","method":"GET"} []
[2022-05-14T13:24:54.265985+02:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/var/www/html/project-1/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/var/www/html/project-1/var/cache/dev/ContainerV6GHmis/App_KernelDevDebugContainer.php","line":1108,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
